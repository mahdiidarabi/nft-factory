{
  "contractName": "BronzeCommunityNFT",
  "sourceName": "contracts/BronzeCommunityNFT.sol",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_baseURI_",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "OperatorRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "NAME",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYMBOL",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "baseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isOperator",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "removeOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOperator",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "newURI",
          "type": "string"
        }
      ],
      "name": "setURI",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "theBaseURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "tokenURI",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200213d3803806200213d833981016040819052620000349162000391565b6040518060400160405280601a81526020017f546f74656d20466f7265737420436f6d6d756e697479204e4654000000000000815250604051806040016040528060078152602001661518d193d3919560ca1b815250620000a46200009e6200011960201b60201c565b6200011d565b8151620000b9906001906020850190620002eb565b508051620000cf906002906020840190620002eb565b505050620000ec620000e66200011960201b60201c565b6200016d565b620000fc57620000fc3362000190565b805162000111906008906020840190620002eb565b5050620004ba565b3390565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006200018a826007620001e260201b62000cc81790919060201c565b92915050565b620001ab8160076200026b60201b62000d4b1790919060201c565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b60006001600160a01b0382166200024b5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b620002778282620001e2565b15620002c65760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640162000242565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b828054620002f99062000467565b90600052602060002090601f0160209004810192826200031d576000855562000368565b82601f106200033857805160ff191683800117855562000368565b8280016001018555821562000368579182015b82811115620003685782518255916020019190600101906200034b565b50620003769291506200037a565b5090565b5b808211156200037657600081556001016200037b565b60006020808385031215620003a4578182fd5b82516001600160401b0380821115620003bb578384fd5b818501915085601f830112620003cf578384fd5b815181811115620003e457620003e4620004a4565b604051601f8201601f19908116603f011681019083821181831017156200040f576200040f620004a4565b81604052828152888684870101111562000427578687fd5b8693505b828410156200044a57848401860151818501870152928501926200042b565b828411156200045b57868684830101525b98975050505050505050565b600181811c908216806200047c57607f821691505b602082108114156200049e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b611c7380620004ca6000396000f3fe608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a3f4df7e11610097578063c87b56dd11610071578063c87b56dd14610392578063e985e9c5146103a5578063f2fde38b146103e1578063f76f8d78146103f4576101a9565b8063a3f4df7e14610330578063ac8a584a1461036c578063b88d4fde1461037f576101a9565b80638da5cb5b116100d35780638da5cb5b146102f157806395d89b41146103025780639870d7fe1461030a578063a22cb4651461031d576101a9565b806370a08231146102c0578063715018a6146102e157806377eebbdb146102e9576101a9565b80632ab6f8db1161016657806342966c681161014057806342966c681461027f5780636352211e146102925780636c0360eb146102a55780636d70f7ae146102ad576101a9565b80632ab6f8db1461025157806340c10f191461025957806342842e0e1461026c576101a9565b806301ffc9a7146101ae57806302fe5305146101d657806306fdde03146101eb578063081812fc14610200578063095ea7b31461022b57806323b872dd1461023e575b600080fd5b6101c16101bc3660046118e3565b61041a565b60405190151581526020015b60405180910390f35b6101e96101e436600461191b565b61046e565b005b6101f36104b8565b6040516101cd9190611a21565b61021361020e366004611961565b61054a565b6040516001600160a01b0390911681526020016101cd565b6101e96102393660046118ba565b6105df565b6101e961024c3660046117cc565b6106f5565b6101e9610727565b6101e96102673660046118ba565b610732565b6101e961027a3660046117cc565b6107ae565b6101e961028d366004611961565b6107c9565b6102136102a0366004611961565b6107fa565b6101f3610871565b6101c16102bb366004611780565b610880565b6102d36102ce366004611780565b61088d565b6040519081526020016101cd565b6101e9610914565b6101f3610948565b6000546001600160a01b0316610213565b6101f36109d6565b6101e9610318366004611780565b6109e5565b6101e961032b366004611880565b610a18565b6101f36040518060400160405280601a81526020017f546f74656d20466f7265737420436f6d6d756e697479204e465400000000000081525081565b6101e961037a366004611780565b610aea565b6101e961038d366004611807565b610b1d565b6101f36103a0366004611961565b610b55565b6101c16103b336600461179a565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101e96103ef366004611780565b610c30565b6101f3604051806040016040528060078152602001661518d193d3919560ca1b81525081565b60006001600160e01b031982166380ac58cd60e01b148061044b57506001600160e01b03198216635b5e139f60e01b145b8061046657506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6000546001600160a01b031633146104a15760405162461bcd60e51b815260040161049890611a86565b60405180910390fd5b80516104b490600890602084019061165a565b5050565b6060600180546104c790611b7b565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390611b7b565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166105c35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610498565b506000908152600560205260409020546001600160a01b031690565b60006105ea826107fa565b9050806001600160a01b0316836001600160a01b031614156106585760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610498565b336001600160a01b0382161480610674575061067481336103b3565b6106e65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610498565b6106f08383610dc7565b505050565b610700335b82610e35565b61071c5760405162461bcd60e51b815260040161049890611abb565b6106f0838383610f2c565b610730336110cc565b565b61073b336102bb565b6107a45760405162461bcd60e51b815260206004820152603460248201527f4f70657261746f72526f6c653a2063616c6c657220646f6573206e6f74206861604482015273766520746865204f70657261746f7220726f6c6560601b6064820152608401610498565b6104b4828261110e565b6106f083838360405180602001604052806000815250610b1d565b6107d2336106fa565b6107ee5760405162461bcd60e51b815260040161049890611abb565b6107f781611250565b50565b6000818152600360205260408120546001600160a01b0316806104665760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610498565b6060600880546104c790611b7b565b6000610466600783610cc8565b60006001600160a01b0382166108f85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610498565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b0316331461093e5760405162461bcd60e51b815260040161049890611a86565b61073060006112eb565b6008805461095590611b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611b7b565b80156109ce5780601f106109a3576101008083540402835291602001916109ce565b820191906000526020600020905b8154815290600101906020018083116109b157829003601f168201915b505050505081565b6060600280546104c790611b7b565b6000546001600160a01b03163314610a0f5760405162461bcd60e51b815260040161049890611a86565b6107f78161133b565b6001600160a01b038216331415610a715760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610498565b3360008181526006602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ade911515815260200190565b60405180910390a35050565b6000546001600160a01b03163314610b145760405162461bcd60e51b815260040161049890611a86565b6107f7816110cc565b610b273383610e35565b610b435760405162461bcd60e51b815260040161049890611abb565b610b4f8484848461137d565b50505050565b6000818152600360205260409020546060906001600160a01b0316610bd45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610498565b6000610bde610871565b90506000815111610bfe5760405180602001604052806000815250610c29565b80610c08846113b0565b604051602001610c199291906119a5565b6040516020818303038152906040525b9392505050565b6000546001600160a01b03163314610c5a5760405162461bcd60e51b815260040161049890611a86565b6001600160a01b038116610cbf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610498565b6107f7816112eb565b60006001600160a01b038216610d2b5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610498565b506001600160a01b03166000908152602091909152604090205460ff1690565b610d558282610cc8565b15610da25760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610498565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610dfc826107fa565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b0316610eae5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610498565b6000610eb9836107fa565b9050806001600160a01b0316846001600160a01b03161480610ef45750836001600160a01b0316610ee98461054a565b6001600160a01b0316145b80610f2457506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610f3f826107fa565b6001600160a01b031614610fa75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610498565b6001600160a01b0382166110095760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610498565b611014600082610dc7565b6001600160a01b038316600090815260046020526040812080546001929061103d908490611b38565b90915550506001600160a01b038216600090815260046020526040812080546001929061106b908490611b0c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6110d76007826114cb565b6040516001600160a01b038216907f80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d90600090a250565b6001600160a01b0382166111645760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610498565b6000818152600360205260409020546001600160a01b0316156111c95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610498565b6001600160a01b03821660009081526004602052604081208054600192906111f2908490611b0c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061125b826107fa565b9050611268600083610dc7565b6001600160a01b0381166000908152600460205260408120805460019290611291908490611b38565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611346600782610d4b565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b611388848484610f2c565b6113948484848461154d565b610b4f5760405162461bcd60e51b815260040161049890611a34565b6060816113d557506040805180820190915260018152600360fc1b6020820152610469565b8160005b81156113ff57806113e981611bb6565b91506113f89050600a83611b24565b91506113d9565b60008167ffffffffffffffff81111561142857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611452576020820181803683370190505b5090505b8415610f2457611467600183611b38565b9150611474600a86611bd1565b61147f906030611b0c565b60f81b8183815181106114a257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506114c4600a86611b24565b9450611456565b6114d58282610cc8565b61152b5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610498565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006001600160a01b0384163b1561164f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115919033908990889088906004016119e4565b602060405180830381600087803b1580156115ab57600080fd5b505af19250505080156115db575060408051601f3d908101601f191682019092526115d8918101906118ff565b60015b611635573d808015611609576040519150601f19603f3d011682016040523d82523d6000602084013e61160e565b606091505b50805161162d5760405162461bcd60e51b815260040161049890611a34565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f24565b506001949350505050565b82805461166690611b7b565b90600052602060002090601f01602090048101928261168857600085556116ce565b82601f106116a157805160ff19168380011785556116ce565b828001600101855582156116ce579182015b828111156116ce5782518255916020019190600101906116b3565b506116da9291506116de565b5090565b5b808211156116da57600081556001016116df565b600067ffffffffffffffff8084111561170e5761170e611c11565b604051601f8501601f19908116603f0116810190828211818310171561173657611736611c11565b8160405280935085815286868601111561174f57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461046957600080fd5b600060208284031215611791578081fd5b610c2982611769565b600080604083850312156117ac578081fd5b6117b583611769565b91506117c360208401611769565b90509250929050565b6000806000606084860312156117e0578081fd5b6117e984611769565b92506117f760208501611769565b9150604084013590509250925092565b6000806000806080858703121561181c578081fd5b61182585611769565b935061183360208601611769565b925060408501359150606085013567ffffffffffffffff811115611855578182fd5b8501601f81018713611865578182fd5b611874878235602084016116f3565b91505092959194509250565b60008060408385031215611892578182fd5b61189b83611769565b9150602083013580151581146118af578182fd5b809150509250929050565b600080604083850312156118cc578182fd5b6118d583611769565b946020939093013593505050565b6000602082840312156118f4578081fd5b8135610c2981611c27565b600060208284031215611910578081fd5b8151610c2981611c27565b60006020828403121561192c578081fd5b813567ffffffffffffffff811115611942578182fd5b8201601f81018413611952578182fd5b610f24848235602084016116f3565b600060208284031215611972578081fd5b5035919050565b60008151808452611991816020860160208601611b4f565b601f01601f19169290920160200192915050565b600083516119b7818460208801611b4f565b8351908301906119cb818360208801611b4f565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a1790830184611979565b9695505050505050565b600060208252610c296020830184611979565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611b1f57611b1f611be5565b500190565b600082611b3357611b33611bfb565b500490565b600082821015611b4a57611b4a611be5565b500390565b60005b83811015611b6a578181015183820152602001611b52565b83811115610b4f5750506000910152565b600181811c90821680611b8f57607f821691505b60208210811415611bb057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611bca57611bca611be5565b5060010190565b600082611be057611be0611bfb565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146107f757600080fdfea264697066735822122089c1c371c4c6ad09ba5b079c9821b8307d8e5318cb13a30004696bf41d371f4864736f6c63430008030033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101a95760003560e01c806370a08231116100f9578063a3f4df7e11610097578063c87b56dd11610071578063c87b56dd14610392578063e985e9c5146103a5578063f2fde38b146103e1578063f76f8d78146103f4576101a9565b8063a3f4df7e14610330578063ac8a584a1461036c578063b88d4fde1461037f576101a9565b80638da5cb5b116100d35780638da5cb5b146102f157806395d89b41146103025780639870d7fe1461030a578063a22cb4651461031d576101a9565b806370a08231146102c0578063715018a6146102e157806377eebbdb146102e9576101a9565b80632ab6f8db1161016657806342966c681161014057806342966c681461027f5780636352211e146102925780636c0360eb146102a55780636d70f7ae146102ad576101a9565b80632ab6f8db1461025157806340c10f191461025957806342842e0e1461026c576101a9565b806301ffc9a7146101ae57806302fe5305146101d657806306fdde03146101eb578063081812fc14610200578063095ea7b31461022b57806323b872dd1461023e575b600080fd5b6101c16101bc3660046118e3565b61041a565b60405190151581526020015b60405180910390f35b6101e96101e436600461191b565b61046e565b005b6101f36104b8565b6040516101cd9190611a21565b61021361020e366004611961565b61054a565b6040516001600160a01b0390911681526020016101cd565b6101e96102393660046118ba565b6105df565b6101e961024c3660046117cc565b6106f5565b6101e9610727565b6101e96102673660046118ba565b610732565b6101e961027a3660046117cc565b6107ae565b6101e961028d366004611961565b6107c9565b6102136102a0366004611961565b6107fa565b6101f3610871565b6101c16102bb366004611780565b610880565b6102d36102ce366004611780565b61088d565b6040519081526020016101cd565b6101e9610914565b6101f3610948565b6000546001600160a01b0316610213565b6101f36109d6565b6101e9610318366004611780565b6109e5565b6101e961032b366004611880565b610a18565b6101f36040518060400160405280601a81526020017f546f74656d20466f7265737420436f6d6d756e697479204e465400000000000081525081565b6101e961037a366004611780565b610aea565b6101e961038d366004611807565b610b1d565b6101f36103a0366004611961565b610b55565b6101c16103b336600461179a565b6001600160a01b03918216600090815260066020908152604080832093909416825291909152205460ff1690565b6101e96103ef366004611780565b610c30565b6101f3604051806040016040528060078152602001661518d193d3919560ca1b81525081565b60006001600160e01b031982166380ac58cd60e01b148061044b57506001600160e01b03198216635b5e139f60e01b145b8061046657506301ffc9a760e01b6001600160e01b03198316145b90505b919050565b6000546001600160a01b031633146104a15760405162461bcd60e51b815260040161049890611a86565b60405180910390fd5b80516104b490600890602084019061165a565b5050565b6060600180546104c790611b7b565b80601f01602080910402602001604051908101604052809291908181526020018280546104f390611b7b565b80156105405780601f1061051557610100808354040283529160200191610540565b820191906000526020600020905b81548152906001019060200180831161052357829003601f168201915b5050505050905090565b6000818152600360205260408120546001600160a01b03166105c35760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610498565b506000908152600560205260409020546001600160a01b031690565b60006105ea826107fa565b9050806001600160a01b0316836001600160a01b031614156106585760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e656044820152603960f91b6064820152608401610498565b336001600160a01b0382161480610674575061067481336103b3565b6106e65760405162461bcd60e51b815260206004820152603860248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760448201527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006064820152608401610498565b6106f08383610dc7565b505050565b610700335b82610e35565b61071c5760405162461bcd60e51b815260040161049890611abb565b6106f0838383610f2c565b610730336110cc565b565b61073b336102bb565b6107a45760405162461bcd60e51b815260206004820152603460248201527f4f70657261746f72526f6c653a2063616c6c657220646f6573206e6f74206861604482015273766520746865204f70657261746f7220726f6c6560601b6064820152608401610498565b6104b4828261110e565b6106f083838360405180602001604052806000815250610b1d565b6107d2336106fa565b6107ee5760405162461bcd60e51b815260040161049890611abb565b6107f781611250565b50565b6000818152600360205260408120546001600160a01b0316806104665760405162461bcd60e51b815260206004820152602960248201527f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460448201526832b73a103a37b5b2b760b91b6064820152608401610498565b6060600880546104c790611b7b565b6000610466600783610cc8565b60006001600160a01b0382166108f85760405162461bcd60e51b815260206004820152602a60248201527f4552433732313a2062616c616e636520717565727920666f7220746865207a65604482015269726f206164647265737360b01b6064820152608401610498565b506001600160a01b031660009081526004602052604090205490565b6000546001600160a01b0316331461093e5760405162461bcd60e51b815260040161049890611a86565b61073060006112eb565b6008805461095590611b7b565b80601f016020809104026020016040519081016040528092919081815260200182805461098190611b7b565b80156109ce5780601f106109a3576101008083540402835291602001916109ce565b820191906000526020600020905b8154815290600101906020018083116109b157829003601f168201915b505050505081565b6060600280546104c790611b7b565b6000546001600160a01b03163314610a0f5760405162461bcd60e51b815260040161049890611a86565b6107f78161133b565b6001600160a01b038216331415610a715760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c6572000000000000006044820152606401610498565b3360008181526006602090815260408083206001600160a01b0387168085529252909120805460ff1916841515179055906001600160a01b03167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051610ade911515815260200190565b60405180910390a35050565b6000546001600160a01b03163314610b145760405162461bcd60e51b815260040161049890611a86565b6107f7816110cc565b610b273383610e35565b610b435760405162461bcd60e51b815260040161049890611abb565b610b4f8484848461137d565b50505050565b6000818152600360205260409020546060906001600160a01b0316610bd45760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b6064820152608401610498565b6000610bde610871565b90506000815111610bfe5760405180602001604052806000815250610c29565b80610c08846113b0565b604051602001610c199291906119a5565b6040516020818303038152906040525b9392505050565b6000546001600160a01b03163314610c5a5760405162461bcd60e51b815260040161049890611a86565b6001600160a01b038116610cbf5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610498565b6107f7816112eb565b60006001600160a01b038216610d2b5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b6064820152608401610498565b506001600160a01b03166000908152602091909152604090205460ff1690565b610d558282610cc8565b15610da25760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610498565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b600081815260056020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610dfc826107fa565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000818152600360205260408120546001600160a01b0316610eae5760405162461bcd60e51b815260206004820152602c60248201527f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860448201526b34b9ba32b73a103a37b5b2b760a11b6064820152608401610498565b6000610eb9836107fa565b9050806001600160a01b0316846001600160a01b03161480610ef45750836001600160a01b0316610ee98461054a565b6001600160a01b0316145b80610f2457506001600160a01b0380821660009081526006602090815260408083209388168352929052205460ff165b949350505050565b826001600160a01b0316610f3f826107fa565b6001600160a01b031614610fa75760405162461bcd60e51b815260206004820152602960248201527f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960448201526839903737ba1037bbb760b91b6064820152608401610498565b6001600160a01b0382166110095760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f206164646044820152637265737360e01b6064820152608401610498565b611014600082610dc7565b6001600160a01b038316600090815260046020526040812080546001929061103d908490611b38565b90915550506001600160a01b038216600090815260046020526040812080546001929061106b908490611b0c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6110d76007826114cb565b6040516001600160a01b038216907f80c0b871b97b595b16a7741c1b06fed0c6f6f558639f18ccbce50724325dc40d90600090a250565b6001600160a01b0382166111645760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f20616464726573736044820152606401610498565b6000818152600360205260409020546001600160a01b0316156111c95760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e746564000000006044820152606401610498565b6001600160a01b03821660009081526004602052604081208054600192906111f2908490611b0c565b909155505060008181526003602052604080822080546001600160a01b0319166001600160a01b03861690811790915590518392907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600061125b826107fa565b9050611268600083610dc7565b6001600160a01b0381166000908152600460205260408120805460019290611291908490611b38565b909155505060008281526003602052604080822080546001600160a01b0319169055518391906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b611346600782610d4b565b6040516001600160a01b038216907fac6fa858e9350a46cec16539926e0fde25b7629f84b5a72bffaae4df888ae86d90600090a250565b611388848484610f2c565b6113948484848461154d565b610b4f5760405162461bcd60e51b815260040161049890611a34565b6060816113d557506040805180820190915260018152600360fc1b6020820152610469565b8160005b81156113ff57806113e981611bb6565b91506113f89050600a83611b24565b91506113d9565b60008167ffffffffffffffff81111561142857634e487b7160e01b600052604160045260246000fd5b6040519080825280601f01601f191660200182016040528015611452576020820181803683370190505b5090505b8415610f2457611467600183611b38565b9150611474600a86611bd1565b61147f906030611b0c565b60f81b8183815181106114a257634e487b7160e01b600052603260045260246000fd5b60200101906001600160f81b031916908160001a9053506114c4600a86611b24565b9450611456565b6114d58282610cc8565b61152b5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610498565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006001600160a01b0384163b1561164f57604051630a85bd0160e11b81526001600160a01b0385169063150b7a02906115919033908990889088906004016119e4565b602060405180830381600087803b1580156115ab57600080fd5b505af19250505080156115db575060408051601f3d908101601f191682019092526115d8918101906118ff565b60015b611635573d808015611609576040519150601f19603f3d011682016040523d82523d6000602084013e61160e565b606091505b50805161162d5760405162461bcd60e51b815260040161049890611a34565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610f24565b506001949350505050565b82805461166690611b7b565b90600052602060002090601f01602090048101928261168857600085556116ce565b82601f106116a157805160ff19168380011785556116ce565b828001600101855582156116ce579182015b828111156116ce5782518255916020019190600101906116b3565b506116da9291506116de565b5090565b5b808211156116da57600081556001016116df565b600067ffffffffffffffff8084111561170e5761170e611c11565b604051601f8501601f19908116603f0116810190828211818310171561173657611736611c11565b8160405280935085815286868601111561174f57600080fd5b858560208301376000602087830101525050509392505050565b80356001600160a01b038116811461046957600080fd5b600060208284031215611791578081fd5b610c2982611769565b600080604083850312156117ac578081fd5b6117b583611769565b91506117c360208401611769565b90509250929050565b6000806000606084860312156117e0578081fd5b6117e984611769565b92506117f760208501611769565b9150604084013590509250925092565b6000806000806080858703121561181c578081fd5b61182585611769565b935061183360208601611769565b925060408501359150606085013567ffffffffffffffff811115611855578182fd5b8501601f81018713611865578182fd5b611874878235602084016116f3565b91505092959194509250565b60008060408385031215611892578182fd5b61189b83611769565b9150602083013580151581146118af578182fd5b809150509250929050565b600080604083850312156118cc578182fd5b6118d583611769565b946020939093013593505050565b6000602082840312156118f4578081fd5b8135610c2981611c27565b600060208284031215611910578081fd5b8151610c2981611c27565b60006020828403121561192c578081fd5b813567ffffffffffffffff811115611942578182fd5b8201601f81018413611952578182fd5b610f24848235602084016116f3565b600060208284031215611972578081fd5b5035919050565b60008151808452611991816020860160208601611b4f565b601f01601f19169290920160200192915050565b600083516119b7818460208801611b4f565b8351908301906119cb818360208801611b4f565b64173539b7b760d91b9101908152600501949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090611a1790830184611979565b9695505050505050565b600060208252610c296020830184611979565b60208082526032908201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560408201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60208082526031908201527f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f6040820152701ddb995c881b9bdc88185c1c1c9bdd9959607a1b606082015260800190565b60008219821115611b1f57611b1f611be5565b500190565b600082611b3357611b33611bfb565b500490565b600082821015611b4a57611b4a611be5565b500390565b60005b83811015611b6a578181015183820152602001611b52565b83811115610b4f5750506000910152565b600181811c90821680611b8f57607f821691505b60208210811415611bb057634e487b7160e01b600052602260045260246000fd5b50919050565b6000600019821415611bca57611bca611be5565b5060010190565b600082611be057611be0611bfb565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146107f757600080fdfea264697066735822122089c1c371c4c6ad09ba5b079c9821b8307d8e5318cb13a30004696bf41d371f4864736f6c63430008030033",
  "linkReferences": {},
  "deployedLinkReferences": {},
  "devdoc": {
    "kind": "dev",
    "methods": {
      "approve(address,uint256)": {
        "details": "See {IERC721-approve}."
      },
      "balanceOf(address)": {
        "details": "See {IERC721-balanceOf}."
      },
      "getApproved(uint256)": {
        "details": "See {IERC721-getApproved}."
      },
      "isApprovedForAll(address,address)": {
        "details": "See {IERC721-isApprovedForAll}."
      },
      "name()": {
        "details": "See {IERC721Metadata-name}."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "See {IERC721-ownerOf}."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "See {IERC721-safeTransferFrom}."
      },
      "setApprovalForAll(address,bool)": {
        "details": "See {IERC721-setApprovalForAll}."
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}."
      },
      "symbol()": {
        "details": "See {IERC721Metadata-symbol}."
      },
      "tokenURI(uint256)": {
        "details": "See {IERC721Metadata-tokenURI}."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC721-transferFrom}."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "evm": {
    "bytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:2433:27",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:27",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "105:1046:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "115:12:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "125:2:27",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "119:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "172:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "181:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "174:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "174:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "174:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "147:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "156:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "143:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "143:23:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "168:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "139:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "139:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "136:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "207:30:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "227:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "221:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "221:16:27"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "211:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "246:28:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "264:2:27",
                                "type": "",
                                "value": "64"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "268:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "260:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "260:10:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "272:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "256:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "256:18:27"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "250:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "301:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "310:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "318:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "303:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "303:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "303:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "289:6:27"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "297:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "286:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "286:14:27"
                      },
                      "nodeType": "YulIf",
                      "src": "283:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "336:32:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "350:9:27"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "361:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "346:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "346:22:27"
                      },
                      "variables": [
                        {
                          "name": "_3",
                          "nodeType": "YulTypedName",
                          "src": "340:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "416:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "425:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "433:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "418:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "418:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "418:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "395:2:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "399:4:27",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "391:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "391:13:27"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "406:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "387:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "387:27:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "380:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:35:27"
                      },
                      "nodeType": "YulIf",
                      "src": "377:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "451:19:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "_3",
                            "nodeType": "YulIdentifier",
                            "src": "467:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "461:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "461:9:27"
                      },
                      "variables": [
                        {
                          "name": "_4",
                          "nodeType": "YulTypedName",
                          "src": "455:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "493:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "495:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "495:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "495:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "485:2:27"
                          },
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "489:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "482:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "482:10:27"
                      },
                      "nodeType": "YulIf",
                      "src": "479:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "524:17:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "538:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "534:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "534:7:27"
                      },
                      "variables": [
                        {
                          "name": "_5",
                          "nodeType": "YulTypedName",
                          "src": "528:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "550:23:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "570:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "564:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "564:9:27"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "554:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "582:71:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "604:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_4",
                                            "nodeType": "YulIdentifier",
                                            "src": "628:2:27"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "632:4:27",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "624:3:27"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "624:13:27"
                                      },
                                      {
                                        "name": "_5",
                                        "nodeType": "YulIdentifier",
                                        "src": "639:2:27"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "620:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "620:22:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "644:2:27",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "616:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "616:31:27"
                              },
                              {
                                "name": "_5",
                                "nodeType": "YulIdentifier",
                                "src": "649:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "612:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "612:40:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "600:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "600:53:27"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "586:10:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "712:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "714:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "714:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "714:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "671:10:27"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "683:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "668:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "668:18:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "691:10:27"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "703:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "688:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "688:22:27"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "665:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "665:46:27"
                      },
                      "nodeType": "YulIf",
                      "src": "662:2:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "750:2:27",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "754:10:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "743:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "743:22:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "743:22:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "781:6:27"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "789:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "774:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "774:18:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "774:18:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "838:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "847:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "855:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "840:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "840:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "840:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "815:2:27"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "819:2:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "811:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "811:11:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "824:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "807:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "807:20:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "829:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "804:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "804:33:27"
                      },
                      "nodeType": "YulIf",
                      "src": "801:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "873:15:27",
                      "value": {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "882:6:27"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "877:1:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "943:83:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "memPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "972:6:27"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "980:1:27"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "968:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "968:14:27"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "984:2:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "964:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "964:23:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "1003:2:27"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "1007:1:27"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "999:3:27"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "999:10:27"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1011:2:27"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "995:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "995:19:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "989:5:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "989:26:27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "957:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "957:59:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "957:59:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "908:1:27"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "911:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "905:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "905:9:27"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "915:19:27",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "917:15:27",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "926:1:27"
                                },
                                {
                                  "name": "_1",
                                  "nodeType": "YulIdentifier",
                                  "src": "929:2:27"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "922:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "922:10:27"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "917:1:27"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "901:3:27",
                        "statements": []
                      },
                      "src": "897:129:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1056:64:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "memPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "1085:6:27"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "1093:2:27"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1081:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1081:15:27"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "1098:2:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1077:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1077:24:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1103:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "1070:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1070:40:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1070:40:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1041:1:27"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1044:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1038:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1038:9:27"
                      },
                      "nodeType": "YulIf",
                      "src": "1035:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1129:16:27",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1139:6:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1129:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "71:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "82:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "94:6:27",
                    "type": ""
                  }
                ],
                "src": "14:1137:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1330:181:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1347:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1358:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1340:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1340:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1340:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1381:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1392:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1377:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1377:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1397:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1370:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1370:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1370:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1420:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1431:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1416:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1416:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1436:33:27",
                            "type": "",
                            "value": "Roles: account already has role"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1409:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1409:61:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1409:61:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1479:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1491:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1502:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1487:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1487:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1479:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1307:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1321:4:27",
                    "type": ""
                  }
                ],
                "src": "1156:355:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1690:224:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1707:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1718:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1700:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1700:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1700:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1741:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1752:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1737:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1737:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1757:2:27",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1730:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1730:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1730:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1780:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1791:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1776:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1776:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1796:34:27",
                            "type": "",
                            "value": "Roles: account is the zero addre"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1769:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1769:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1769:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1851:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1862:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1847:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1847:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "1867:4:27",
                            "type": "",
                            "value": "ss"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "1840:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1840:32:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "1840:32:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1881:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1893:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1904:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1889:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1889:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "1881:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1667:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "1681:4:27",
                    "type": ""
                  }
                ],
                "src": "1516:398:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1974:325:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "1984:22:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1998:1:27",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "2001:4:27"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "1994:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1994:12:27"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "1984:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2015:38:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "2045:4:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2051:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2041:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2041:12:27"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "2019:18:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2092:31:27",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "2094:27:27",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2108:6:27"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2116:4:27",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "2104:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2104:17:27"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2094:6:27"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "2072:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2065:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2065:26:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2062:2:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2182:111:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2203:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2210:3:27",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "2215:10:27",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "2206:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2206:20:27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2196:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2196:31:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2196:31:27"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2247:1:27",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2250:4:27",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "2240:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2240:15:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2240:15:27"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2275:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2278:4:27",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2268:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2268:15:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2268:15:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "2138:18:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "2161:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2169:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2158:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2158:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2135:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2135:38:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2132:2:27"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "1954:4:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "1963:6:27",
                    "type": ""
                  }
                ],
                "src": "1919:380:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2336:95:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2353:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2360:3:27",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2365:10:27",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "2356:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2356:20:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2346:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2346:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2346:31:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2393:1:27",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2396:4:27",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "2386:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2386:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2386:15:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2417:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2420:4:27",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "2410:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2410:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2410:15:27"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "2304:127:27"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := mload(_3)\n        if gt(_4, _2) { panic_error_0x41() }\n        let _5 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_4, 0x1f), _5), 63), _5))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _4)\n        if gt(add(add(_3, _4), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, _1) }\n        {\n            mstore(add(add(memPtr, i), _1), mload(add(add(_3, i), _1)))\n        }\n        if gt(i, _4)\n        {\n            mstore(add(add(memPtr, _4), _1), value0)\n        }\n        value0 := memPtr\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
          "id": 27,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x213D CODESIZE SUB DUP1 PUSH3 0x213D DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x391 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F74656D20466F7265737420436F6D6D756E697479204E4654000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1518D193D39195 PUSH1 0xCA SHL DUP2 MSTORE POP PUSH3 0xA4 PUSH3 0x9E PUSH3 0x119 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x11D JUMP JUMPDEST DUP2 MLOAD PUSH3 0xB9 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x2EB JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0xCF SWAP1 PUSH1 0x2 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2EB JUMP JUMPDEST POP POP POP PUSH3 0xEC PUSH3 0xE6 PUSH3 0x119 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x16D JUMP JUMPDEST PUSH3 0xFC JUMPI PUSH3 0xFC CALLER PUSH3 0x190 JUMP JUMPDEST DUP1 MLOAD PUSH3 0x111 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x2EB JUMP JUMPDEST POP POP PUSH3 0x4BA JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x18A DUP3 PUSH1 0x7 PUSH3 0x1E2 PUSH1 0x20 SHL PUSH3 0xCC8 OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x1AB DUP2 PUSH1 0x7 PUSH3 0x26B PUSH1 0x20 SHL PUSH3 0xD4B OR SWAP1 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xAC6FA858E9350A46CEC16539926E0FDE25B7629F84B5A72BFFAAE4DF888AE86D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x24B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH3 0x277 DUP3 DUP3 PUSH3 0x1E2 JUMP JUMPDEST ISZERO PUSH3 0x2C6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH3 0x242 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x2F9 SWAP1 PUSH3 0x467 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x31D JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x368 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x338 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x368 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x368 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x368 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x34B JUMP JUMPDEST POP PUSH3 0x376 SWAP3 SWAP2 POP PUSH3 0x37A JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x376 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x37B JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x3A4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x3BB JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x3CF JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 MLOAD DUP2 DUP2 GT ISZERO PUSH3 0x3E4 JUMPI PUSH3 0x3E4 PUSH3 0x4A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP4 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x40F JUMPI PUSH3 0x40F PUSH3 0x4A4 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP3 DUP2 MSTORE DUP9 DUP7 DUP5 DUP8 ADD ADD GT ISZERO PUSH3 0x427 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP4 POP JUMPDEST DUP3 DUP5 LT ISZERO PUSH3 0x44A JUMPI DUP5 DUP5 ADD DUP7 ADD MLOAD DUP2 DUP6 ADD DUP8 ADD MSTORE SWAP3 DUP6 ADD SWAP3 PUSH3 0x42B JUMP JUMPDEST DUP3 DUP5 GT ISZERO PUSH3 0x45B JUMPI DUP7 DUP7 DUP5 DUP4 ADD ADD MSTORE JUMPDEST SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x47C JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x49E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1C73 DUP1 PUSH3 0x4CA PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA3F4DF7E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x3F4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xAC8A584A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x9870D7FE EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x77EEBBDB EQ PUSH2 0x2E9 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2AB6F8DB GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x2AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2AB6F8DB EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F74656D20466F7265737420436F6D6D756E697479204E4654000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1518D193D39195 PUSH1 0xCA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x466 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4B4 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x165A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x540 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x515 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x540 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x523 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x674 JUMPI POP PUSH2 0x674 DUP2 CALLER PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 PUSH2 0xDC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x700 CALLER JUMPDEST DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 DUP4 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x730 CALLER PUSH2 0x10CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x73B CALLER PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F72526F6C653A2063616C6C657220646F6573206E6F74206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x766520746865204F70657261746F7220726F6C65 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x4B4 DUP3 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x7D2 CALLER PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x1250 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466 PUSH1 0x7 DUP4 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x730 PUSH1 0x0 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x955 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x981 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xADE SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0xB27 CALLER DUP4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xB4F DUP5 DUP5 DUP5 DUP5 PUSH2 0x137D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDE PUSH2 0x871 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC29 JUMP JUMPDEST DUP1 PUSH2 0xC08 DUP5 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC19 SWAP3 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD55 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xDFC DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP4 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEF4 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE9 DUP5 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF3F DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x0 DUP3 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x103D SWAP1 DUP5 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x106B SWAP1 DUP5 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x10D7 PUSH1 0x7 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11F2 SWAP1 DUP5 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125B DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP PUSH2 0x1268 PUSH1 0x0 DUP4 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1291 SWAP1 DUP5 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH1 0x7 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xAC6FA858E9350A46CEC16539926E0FDE25B7629F84B5A72BFFAAE4DF888AE86D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1388 DUP5 DUP5 DUP5 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1394 DUP5 DUP5 DUP5 DUP5 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x13D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x469 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x13FF JUMPI DUP1 PUSH2 0x13E9 DUP2 PUSH2 0x1BB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F8 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1428 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1452 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF24 JUMPI PUSH2 0x1467 PUSH1 0x1 DUP4 PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 PUSH1 0xA DUP7 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x147F SWAP1 PUSH1 0x30 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x14C4 PUSH1 0xA DUP7 PUSH2 0x1B24 JUMP JUMPDEST SWAP5 POP PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x14D5 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x152B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1591 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15DB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x15D8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1635 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1609 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x160E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1666 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1688 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x16CE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16A1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x16CE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x16CE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16CE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16B3 JUMP JUMPDEST POP PUSH2 0x16DA SWAP3 SWAP2 POP PUSH2 0x16DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16DA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170E PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1736 PUSH2 0x1C11 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1791 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC29 DUP3 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B5 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C3 PUSH1 0x20 DUP5 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17E9 DUP5 PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP PUSH2 0x17F7 PUSH1 0x20 DUP6 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x181C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1825 DUP6 PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 PUSH1 0x20 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1855 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1865 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1874 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1892 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x189B DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x18D5 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC29 DUP2 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1910 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC29 DUP2 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1942 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1952 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF24 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1972 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1991 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x19B7 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1B4F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19CB DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1B4F JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A17 SWAP1 DUP4 ADD DUP5 PUSH2 0x1979 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1BE5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B33 JUMPI PUSH2 0x1B33 PUSH2 0x1BFB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B4A JUMPI PUSH2 0x1B4A PUSH2 0x1BE5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B52 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB4F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B8F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BCA PUSH2 0x1BE5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BE0 JUMPI PUSH2 0x1BE0 PUSH2 0x1BFB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xC1 0xC3 PUSH18 0xC4C6AD09BA5B079C9821B8307D8E5318CB13 LOG3 STOP DIV PUSH10 0x6BF41D371F4864736F6C PUSH4 0x43000803 STOP CALLER ",
      "sourceMap": "362:1440:15:-:0;;;604:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;670:4;;;;;;;;;;;;;;;;;688:6;;;;;;;;;;;;;-1:-1:-1;;;688:6:15;;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;:23::i;:::-;1382:13:4;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;1405:17:4;;;;:7;;:17;;;;;:::i;:::-;;1316:113;;375:24:21;386:12;:10;;;:12;;:::i;:::-;375:10;:24::i;:::-;370:82;;415:26;666:10:9;415:12:21;:26::i;:::-;720:22:15;;::::1;::::0;:10:::1;::::0;:22:::1;::::0;::::1;::::0;::::1;:::i;:::-;;604:145:::0;362:1440;;587:96:9;666:10;587:96;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;645:111:21:-;703:4;726:23;741:7;726:10;:14;;;;;;:23;;;;:::i;:::-;719:30;645:111;-1:-1:-1;;645:111:21:o;849:125::-;907:23;922:7;907:10;:14;;;;;;:23;;;;:::i;:::-;945:22;;-1:-1:-1;;;;;945:22:21;;;;;;;;849:125;:::o;817:228:22:-;913:4;-1:-1:-1;;;;;941:21:22;;933:68;;;;-1:-1:-1;;;933:68:22;;1718:2:27;933:68:22;;;1700:21:27;1757:2;1737:18;;;1730:30;1796:34;1776:18;;;1769:62;-1:-1:-1;;;1847:18:27;;;1840:32;1889:19;;933:68:22;;;;;;;;;-1:-1:-1;;;;;;1018:20:22;:11;:20;;;;;;;;;;;;;;;817:228::o;298:175::-;375:18;379:4;385:7;375:3;:18::i;:::-;374:19;366:63;;;;-1:-1:-1;;;366:63:22;;1358:2:27;366:63:22;;;1340:21:27;1397:2;1377:18;;;1370:30;1436:33;1416:18;;;1409:61;1487:18;;366:63:22;1330:181:27;366:63:22;-1:-1:-1;;;;;439:20:22;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;439:27:22;462:4;439:27;;;298:175::o;362:1440:15:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;362:1440:15;;;-1:-1:-1;362:1440:15;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:1137:27;;125:2;168;156:9;147:7;143:23;139:32;136:2;;;189:6;181;174:22;136:2;221:16;;-1:-1:-1;;;;;286:14:27;;;283:2;;;318:6;310;303:22;283:2;361:6;350:9;346:22;336:32;;406:7;399:4;395:2;391:13;387:27;377:2;;433:6;425;418:22;377:2;467;461:9;489:2;485;482:10;479:2;;;495:18;;:::i;:::-;570:2;564:9;538:2;624:13;;-1:-1:-1;;620:22:27;;;644:2;616:31;612:40;600:53;;;668:18;;;688:22;;;665:46;662:2;;;714:18;;:::i;:::-;754:10;750:2;743:22;789:2;781:6;774:18;829:7;824:2;819;815;811:11;807:20;804:33;801:2;;;855:6;847;840:22;801:2;882:6;873:15;;897:129;911:2;908:1;905:9;897:129;;;999:10;;;995:19;;989:26;968:14;;;964:23;;957:59;922:10;;;;897:129;;;1044:2;1041:1;1038:9;1035:2;;;1103:6;1098:2;1093;1085:6;1081:15;1077:24;1070:40;1035:2;1139:6;105:1046;-1:-1:-1;;;;;;;;105:1046:27:o;1919:380::-;1998:1;1994:12;;;;2041;;;2062:2;;2116:4;2108:6;2104:17;2094:27;;2062:2;2169;2161:6;2158:14;2138:18;2135:38;2132:2;;;2215:10;2210:3;2206:20;2203:1;2196:31;2250:4;2247:1;2240:15;2278:4;2275:1;2268:15;2132:2;;1974:325;;;:::o;2304:127::-;2365:10;2360:3;2356:20;2353:1;2346:31;2396:4;2393:1;2386:15;2420:4;2417:1;2410:15;2336:95;362:1440:15;;;;;;"
    },
    "deployedBytecode": {
      "generatedSources": [
        {
          "ast": {
            "nodeType": "YulBlock",
            "src": "0:16186:27",
            "statements": [
              {
                "nodeType": "YulBlock",
                "src": "6:3:27",
                "statements": []
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "88:557:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "98:28:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "108:18:27",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "102:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "153:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "155:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "155:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "155:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "141:6:27"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "149:2:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "138:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "138:14:27"
                      },
                      "nodeType": "YulIf",
                      "src": "135:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "184:17:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "198:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "194:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "194:7:27"
                      },
                      "variables": [
                        {
                          "name": "_2",
                          "nodeType": "YulTypedName",
                          "src": "188:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "210:23:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "230:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "224:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "224:9:27"
                      },
                      "variables": [
                        {
                          "name": "memPtr",
                          "nodeType": "YulTypedName",
                          "src": "214:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "242:73:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "264:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "length",
                                            "nodeType": "YulIdentifier",
                                            "src": "288:6:27"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "296:2:27",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "284:3:27"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "284:15:27"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "301:2:27"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "280:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "280:24:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "306:2:27",
                                    "type": "",
                                    "value": "63"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "276:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "276:33:27"
                              },
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "311:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "272:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "272:42:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "260:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "260:55:27"
                      },
                      "variables": [
                        {
                          "name": "newFreePtr",
                          "nodeType": "YulTypedName",
                          "src": "246:10:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "374:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x41",
                                "nodeType": "YulIdentifier",
                                "src": "376:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "376:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "376:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "333:10:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "345:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "gt",
                              "nodeType": "YulIdentifier",
                              "src": "330:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "330:18:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "newFreePtr",
                                "nodeType": "YulIdentifier",
                                "src": "353:10:27"
                              },
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "365:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "350:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "350:22:27"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "327:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "327:46:27"
                      },
                      "nodeType": "YulIf",
                      "src": "324:2:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "412:2:27",
                            "type": "",
                            "value": "64"
                          },
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "416:10:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "405:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "405:22:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "405:22:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "436:15:27",
                      "value": {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "445:6:27"
                      },
                      "variableNames": [
                        {
                          "name": "array",
                          "nodeType": "YulIdentifier",
                          "src": "436:5:27"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "467:6:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "475:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "460:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "460:22:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "460:22:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "520:16:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "529:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "532:1:27",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "522:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "522:12:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "522:12:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "src",
                                "nodeType": "YulIdentifier",
                                "src": "501:3:27"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "506:6:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "497:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "497:16:27"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "515:3:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "494:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "494:25:27"
                      },
                      "nodeType": "YulIf",
                      "src": "491:2:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "562:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "570:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "558:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "558:17:27"
                          },
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "577:3:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "582:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldatacopy",
                          "nodeType": "YulIdentifier",
                          "src": "545:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "545:44:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "545:44:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "613:6:27"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "621:6:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "609:19:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "630:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "605:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "605:30:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "637:1:27",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "598:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "598:41:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "598:41:27"
                    }
                  ]
                },
                "name": "abi_decode_available_length_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "57:3:27",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "62:6:27",
                    "type": ""
                  },
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "70:3:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "array",
                    "nodeType": "YulTypedName",
                    "src": "78:5:27",
                    "type": ""
                  }
                ],
                "src": "14:631:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "699:124:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "709:29:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "731:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "718:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "718:20:27"
                      },
                      "variableNames": [
                        {
                          "name": "value",
                          "nodeType": "YulIdentifier",
                          "src": "709:5:27"
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "801:16:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "810:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "813:1:27",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "803:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "803:12:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "803:12:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "760:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "771:5:27"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "786:3:27",
                                            "type": "",
                                            "value": "160"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "791:1:27",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "shl",
                                          "nodeType": "YulIdentifier",
                                          "src": "782:3:27"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "782:11:27"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "795:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "778:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "778:19:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "767:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "767:31:27"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "757:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "757:42:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "750:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "750:50:27"
                      },
                      "nodeType": "YulIf",
                      "src": "747:2:27"
                    }
                  ]
                },
                "name": "abi_decode_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "offset",
                    "nodeType": "YulTypedName",
                    "src": "678:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "689:5:27",
                    "type": ""
                  }
                ],
                "src": "650:173:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "898:126:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "944:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "953:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "961:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "946:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "946:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "946:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "919:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "928:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "915:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "915:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "940:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "911:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "911:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "908:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "979:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1008:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "989:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "989:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "979:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "864:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "875:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "887:6:27",
                    "type": ""
                  }
                ],
                "src": "828:196:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1116:183:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1162:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1171:6:27"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1179:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1164:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1164:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1164:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1137:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1146:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1133:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1133:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1158:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1129:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1129:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "1126:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1197:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1226:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1207:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1207:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1197:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1245:48:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1278:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1289:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1274:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1274:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1255:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1255:38:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1245:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_address",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1074:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1085:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1097:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1105:6:27",
                    "type": ""
                  }
                ],
                "src": "1029:270:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1408:234:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1454:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1463:6:27"
                                },
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "1471:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1456:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1456:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1456:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1429:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1438:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1425:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1425:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1450:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1421:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1421:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "1418:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1489:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1518:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1499:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1499:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1489:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1537:48:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1570:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1581:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1566:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1566:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1547:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1547:38:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1537:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1594:42:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1621:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1632:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1617:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1617:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1604:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1604:32:27"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1594:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1358:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1369:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1381:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1389:6:27",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1397:6:27",
                    "type": ""
                  }
                ],
                "src": "1304:338:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "1777:566:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1824:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1833:6:27"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "1841:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "1826:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1826:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "1826:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "1798:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1807:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1794:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1794:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1819:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:33:27"
                      },
                      "nodeType": "YulIf",
                      "src": "1787:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1859:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1888:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1869:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1869:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1859:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1907:48:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1940:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1951:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1936:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1936:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "1917:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:38:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1907:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1964:42:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1991:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2002:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1987:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1987:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "1974:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1974:32:27"
                      },
                      "variableNames": [
                        {
                          "name": "value2",
                          "nodeType": "YulIdentifier",
                          "src": "1964:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2015:46:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2046:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2057:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2042:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2042:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2029:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2029:32:27"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "2019:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2104:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2113:6:27"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2121:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2106:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2106:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2106:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2076:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2084:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "2073:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2073:30:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2070:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2139:32:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2153:9:27"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "2164:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2149:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2149:22:27"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "2143:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2219:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2228:6:27"
                                },
                                {
                                  "name": "value3",
                                  "nodeType": "YulIdentifier",
                                  "src": "2236:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2221:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2221:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2221:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2198:2:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2202:4:27",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2194:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2194:13:27"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2209:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "2190:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2190:27:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2183:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2183:35:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2180:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2254:83:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2302:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2306:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2298:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2298:11:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "2324:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "2311:12:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2311:16:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2329:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_available_length_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "2264:33:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2264:73:27"
                      },
                      "variableNames": [
                        {
                          "name": "value3",
                          "nodeType": "YulIdentifier",
                          "src": "2254:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "1719:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "1730:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "1742:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "1750:6:27",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "1758:6:27",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "1766:6:27",
                    "type": ""
                  }
                ],
                "src": "1647:696:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2432:283:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2478:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2487:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2495:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2480:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2480:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2480:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2453:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2462:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2449:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2449:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2474:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2445:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2445:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2442:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2513:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2542:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2523:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2523:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2513:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2561:45:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2591:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2602:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2587:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2587:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2574:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2574:32:27"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "2565:5:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2659:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2668:6:27"
                                },
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "2676:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2661:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2661:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2661:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2628:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2649:5:27"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "2642:6:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2642:13:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2635:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2635:21:27"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2625:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2625:32:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "2618:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2618:40:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2615:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2694:15:27",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2704:5:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2694:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_bool",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2390:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2401:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2413:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2421:6:27",
                    "type": ""
                  }
                ],
                "src": "2348:367:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "2807:177:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "2853:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2862:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2870:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "2855:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2855:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "2855:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "2828:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2837:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2824:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2824:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2849:2:27",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2820:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2820:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "2817:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2888:39:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2917:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_address",
                          "nodeType": "YulIdentifier",
                          "src": "2898:18:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2898:29:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "2888:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "2936:42:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "2963:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2974:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2959:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2959:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "2946:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2946:32:27"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "2936:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_addresst_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "2765:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "2776:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "2788:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "2796:6:27",
                    "type": ""
                  }
                ],
                "src": "2720:264:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3058:186:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3104:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3113:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3121:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3106:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3106:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3106:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3079:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3088:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3075:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3075:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3100:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3071:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3071:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "3068:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3139:36:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3165:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3152:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3152:23:27"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3143:5:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3208:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3184:23:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3184:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3184:30:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3223:15:27",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3233:5:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3223:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3024:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3035:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3047:6:27",
                    "type": ""
                  }
                ],
                "src": "2989:255:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3329:179:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3375:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3384:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3392:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3377:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3377:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3377:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3350:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3359:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3346:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3346:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3371:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3342:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3342:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "3339:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3410:29:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3429:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3423:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3423:16:27"
                      },
                      "variables": [
                        {
                          "name": "value",
                          "nodeType": "YulTypedName",
                          "src": "3414:5:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3472:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "validator_revert_bytes4",
                          "nodeType": "YulIdentifier",
                          "src": "3448:23:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3448:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "3448:30:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3487:15:27",
                      "value": {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3497:5:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3487:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_bytes4_fromMemory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3295:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3306:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3318:6:27",
                    "type": ""
                  }
                ],
                "src": "3249:259:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "3593:400:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3639:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3648:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3656:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3641:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3641:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3641:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3614:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3623:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3610:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3610:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3635:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "3606:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3606:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "3603:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3674:37:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3701:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "3688:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3688:23:27"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3678:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3754:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3763:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3771:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3756:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3756:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3756:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3726:6:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3734:18:27",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3723:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3723:30:27"
                      },
                      "nodeType": "YulIf",
                      "src": "3720:2:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3789:32:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3803:9:27"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3814:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3799:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3799:22:27"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "3793:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3869:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3878:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3886:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "3871:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3871:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3871:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "3848:2:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3852:4:27",
                                    "type": "",
                                    "value": "0x1f"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3844:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3844:13:27"
                              },
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "3859:7:27"
                              }
                            ],
                            "functionName": {
                              "name": "slt",
                              "nodeType": "YulIdentifier",
                              "src": "3840:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3840:27:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "3833:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3833:35:27"
                      },
                      "nodeType": "YulIf",
                      "src": "3830:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3904:83:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3952:2:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3956:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3948:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3948:11:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "3974:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "calldataload",
                              "nodeType": "YulIdentifier",
                              "src": "3961:12:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3961:16:27"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3979:7:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_available_length_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "3914:33:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3914:73:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3904:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_string_memory_ptr",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "3559:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "3570:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "3582:6:27",
                    "type": ""
                  }
                ],
                "src": "3513:480:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4068:120:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "4114:26:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4123:6:27"
                                },
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4131:6:27"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "4116:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4116:22:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "4116:22:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "dataEnd",
                                "nodeType": "YulIdentifier",
                                "src": "4089:7:27"
                              },
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4098:9:27"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4085:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4085:23:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4110:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "4081:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4081:32:27"
                      },
                      "nodeType": "YulIf",
                      "src": "4078:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4149:33:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4172:9:27"
                          }
                        ],
                        "functionName": {
                          "name": "calldataload",
                          "nodeType": "YulIdentifier",
                          "src": "4159:12:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4159:23:27"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4149:6:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_decode_tuple_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "4034:9:27",
                    "type": ""
                  },
                  {
                    "name": "dataEnd",
                    "nodeType": "YulTypedName",
                    "src": "4045:7:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4057:6:27",
                    "type": ""
                  }
                ],
                "src": "3998:190:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4242:208:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4252:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4272:5:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4266:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4266:12:27"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "4256:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4294:3:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4299:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4287:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4287:19:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4287:19:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4341:5:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4348:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4337:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4337:16:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4359:3:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4364:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4355:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4355:14:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4371:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "4315:21:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4315:63:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4315:63:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4387:57:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4402:3:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "4415:6:27"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4423:2:27",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4411:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4411:15:27"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4432:2:27",
                                        "type": "",
                                        "value": "31"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "4428:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4428:7:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "4407:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4407:29:27"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4398:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4398:39:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4439:4:27",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4394:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4394:50:27"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "4387:3:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_bytes",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "4219:5:27",
                    "type": ""
                  },
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4226:3:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4234:3:27",
                    "type": ""
                  }
                ],
                "src": "4193:257:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "4743:349:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4753:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4773:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4767:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4767:13:27"
                      },
                      "variables": [
                        {
                          "name": "length",
                          "nodeType": "YulTypedName",
                          "src": "4757:6:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "4815:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4823:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4811:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4811:17:27"
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4830:3:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4835:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "4789:21:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4789:53:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4789:53:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4851:29:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4868:3:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4873:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4864:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4864:16:27"
                      },
                      "variables": [
                        {
                          "name": "end_1",
                          "nodeType": "YulTypedName",
                          "src": "4855:5:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4889:29:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "4911:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4905:5:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4905:13:27"
                      },
                      "variables": [
                        {
                          "name": "length_1",
                          "nodeType": "YulTypedName",
                          "src": "4893:8:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "4953:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4961:4:27",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4949:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4949:17:27"
                          },
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "4968:5:27"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "4975:8:27"
                          }
                        ],
                        "functionName": {
                          "name": "copy_memory_to_memory",
                          "nodeType": "YulIdentifier",
                          "src": "4927:21:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4927:57:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4927:57:27"
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4993:33:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "end_1",
                            "nodeType": "YulIdentifier",
                            "src": "5010:5:27"
                          },
                          {
                            "name": "length_1",
                            "nodeType": "YulIdentifier",
                            "src": "5017:8:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5006:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5006:20:27"
                      },
                      "variables": [
                        {
                          "name": "end_2",
                          "nodeType": "YulTypedName",
                          "src": "4997:5:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "end_2",
                            "nodeType": "YulIdentifier",
                            "src": "5042:5:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "5049:7:27",
                            "type": "",
                            "value": ".json"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5035:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5035:22:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5035:22:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5066:20:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "end_2",
                            "nodeType": "YulIdentifier",
                            "src": "5077:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5084:1:27",
                            "type": "",
                            "value": "5"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5073:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5073:13:27"
                      },
                      "variableNames": [
                        {
                          "name": "end",
                          "nodeType": "YulIdentifier",
                          "src": "5066:3:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "pos",
                    "nodeType": "YulTypedName",
                    "src": "4711:3:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "4716:6:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "4724:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "end",
                    "nodeType": "YulTypedName",
                    "src": "4735:3:27",
                    "type": ""
                  }
                ],
                "src": "4455:637:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5198:102:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5208:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5220:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5231:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5216:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5216:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5208:4:27"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5250:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5265:6:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5281:3:27",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5286:1:27",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "5277:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5277:11:27"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5290:1:27",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "5273:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5273:19:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5261:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5261:32:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5243:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5243:51:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5243:51:27"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5167:9:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5178:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5189:4:27",
                    "type": ""
                  }
                ],
                "src": "5097:203:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5508:285:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5518:29:27",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5536:3:27",
                                "type": "",
                                "value": "160"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5541:1:27",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "5532:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5532:11:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5545:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5528:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5528:19:27"
                      },
                      "variables": [
                        {
                          "name": "_1",
                          "nodeType": "YulTypedName",
                          "src": "5522:2:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5563:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "5578:6:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5586:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5574:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5574:15:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5556:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5556:34:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5556:34:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5610:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5621:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5606:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5606:18:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5630:6:27"
                              },
                              {
                                "name": "_1",
                                "nodeType": "YulIdentifier",
                                "src": "5638:2:27"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5626:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5626:15:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5599:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5599:43:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5599:43:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5662:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5673:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5658:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5658:18:27"
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulIdentifier",
                            "src": "5678:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5651:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5651:34:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5651:34:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5705:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5716:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5701:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5701:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5721:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5694:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5694:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5694:31:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5734:53:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value3",
                            "nodeType": "YulIdentifier",
                            "src": "5759:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5771:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5782:3:27",
                                "type": "",
                                "value": "128"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5767:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5767:19:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "5742:16:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5742:45:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5734:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5453:9:27",
                    "type": ""
                  },
                  {
                    "name": "value3",
                    "nodeType": "YulTypedName",
                    "src": "5464:6:27",
                    "type": ""
                  },
                  {
                    "name": "value2",
                    "nodeType": "YulTypedName",
                    "src": "5472:6:27",
                    "type": ""
                  },
                  {
                    "name": "value1",
                    "nodeType": "YulTypedName",
                    "src": "5480:6:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5488:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5499:4:27",
                    "type": ""
                  }
                ],
                "src": "5305:488:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "5893:92:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "5903:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5915:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5926:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5911:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5911:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "5903:4:27"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5945:9:27"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5970:6:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5963:6:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5963:14:27"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5956:6:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5956:22:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "5938:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5938:41:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "5938:41:27"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "5862:9:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "5873:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "5884:4:27",
                    "type": ""
                  }
                ],
                "src": "5798:187:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6111:98:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6128:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6139:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6121:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6121:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6121:21:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6151:52:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "6176:6:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6188:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6199:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6184:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6184:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_bytes",
                          "nodeType": "YulIdentifier",
                          "src": "6159:16:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6159:44:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6151:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6080:9:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "6091:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6102:4:27",
                    "type": ""
                  }
                ],
                "src": "5990:219:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6388:181:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6405:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6416:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6398:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6398:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6398:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6439:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6450:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6435:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6435:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6455:2:27",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6428:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6428:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6428:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6478:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6489:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6474:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6474:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6494:33:27",
                            "type": "",
                            "value": "Roles: account already has role"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6467:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6467:61:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6467:61:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6537:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6549:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6560:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6545:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6545:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6537:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6365:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6379:4:27",
                    "type": ""
                  }
                ],
                "src": "6214:355:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "6748:240:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6765:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6776:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6758:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6758:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6758:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6799:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6810:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6795:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6795:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6815:2:27",
                            "type": "",
                            "value": "50"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6788:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6788:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6788:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6838:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6849:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6834:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6834:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6854:34:27",
                            "type": "",
                            "value": "ERC721: transfer to non ERC721Re"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6827:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6827:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6827:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6909:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6920:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6905:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6905:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "6925:20:27",
                            "type": "",
                            "value": "ceiver implementer"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "6898:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6898:48:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "6898:48:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6955:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6967:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6978:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6963:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6963:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "6955:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "6725:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "6739:4:27",
                    "type": ""
                  }
                ],
                "src": "6574:414:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7167:228:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7184:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7195:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7177:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7177:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7177:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7218:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7229:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7214:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7214:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7234:2:27",
                            "type": "",
                            "value": "38"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7207:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7207:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7207:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7257:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7268:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7253:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7253:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7273:34:27",
                            "type": "",
                            "value": "Ownable: new owner is the zero a"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7246:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7246:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7246:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7328:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7339:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7324:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7324:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7344:8:27",
                            "type": "",
                            "value": "ddress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7317:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7317:36:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7317:36:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7362:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7374:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7385:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7370:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7370:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7362:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7144:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7158:4:27",
                    "type": ""
                  }
                ],
                "src": "6993:402:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7574:178:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7591:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7602:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7584:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7584:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7584:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7625:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7636:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7621:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7621:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7641:2:27",
                            "type": "",
                            "value": "28"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7614:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7614:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7614:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7664:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7675:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7660:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7660:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "7680:30:27",
                            "type": "",
                            "value": "ERC721: token already minted"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7653:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7653:58:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7653:58:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7720:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7732:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7743:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7728:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7728:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "7720:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7551:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7565:4:27",
                    "type": ""
                  }
                ],
                "src": "7400:352:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "7931:226:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7948:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7959:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7941:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7941:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7941:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7982:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "7993:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7978:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7978:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7998:2:27",
                            "type": "",
                            "value": "36"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "7971:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7971:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "7971:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8021:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8032:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8017:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8017:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8037:34:27",
                            "type": "",
                            "value": "ERC721: transfer to the zero add"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8010:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8010:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8010:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8092:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8103:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8088:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8088:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8108:6:27",
                            "type": "",
                            "value": "ress"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8081:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8081:34:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8081:34:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8124:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8136:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8147:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8132:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8132:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8124:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "7908:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "7922:4:27",
                    "type": ""
                  }
                ],
                "src": "7757:400:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8336:175:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8353:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8364:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8346:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8346:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8346:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8387:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8398:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8383:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8383:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8403:2:27",
                            "type": "",
                            "value": "25"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8376:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8376:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8376:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8426:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8437:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8422:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8422:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8442:27:27",
                            "type": "",
                            "value": "ERC721: approve to caller"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8415:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8415:55:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8415:55:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8479:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8491:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8502:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8487:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8487:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8479:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8313:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8327:4:27",
                    "type": ""
                  }
                ],
                "src": "8162:349:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "8690:242:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8707:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8718:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8700:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8700:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8700:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8741:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8752:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8737:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8737:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8757:2:27",
                            "type": "",
                            "value": "52"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8730:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8730:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8730:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8780:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8791:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8776:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8776:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8796:34:27",
                            "type": "",
                            "value": "OperatorRole: caller does not ha"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8769:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8769:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8769:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "8851:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "8862:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "8847:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "8847:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "8867:22:27",
                            "type": "",
                            "value": "ve the Operator role"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "8840:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8840:50:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "8840:50:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "8899:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8911:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8922:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8907:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8907:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "8899:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_49d10a114f36d55debe3771eaf3da9644ffbf942300b327e99ab15031f5393f6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "8667:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "8681:4:27",
                    "type": ""
                  }
                ],
                "src": "8516:416:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9111:234:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9128:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9139:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9121:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9121:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9121:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9162:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9173:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9158:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9158:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9178:2:27",
                            "type": "",
                            "value": "44"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9151:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9151:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9151:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9201:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9212:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9197:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9197:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9217:34:27",
                            "type": "",
                            "value": "ERC721: operator query for nonex"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9190:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9190:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9190:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9272:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9283:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9268:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9268:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9288:14:27",
                            "type": "",
                            "value": "istent token"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9261:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9261:42:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9261:42:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9312:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9324:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9335:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9320:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9320:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9312:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9088:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9102:4:27",
                    "type": ""
                  }
                ],
                "src": "8937:408:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9524:246:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9541:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9552:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9534:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9534:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9534:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9575:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9586:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9571:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9571:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9591:2:27",
                            "type": "",
                            "value": "56"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9564:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9564:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9564:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9614:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9625:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9610:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9610:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9630:34:27",
                            "type": "",
                            "value": "ERC721: approve caller is not ow"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9603:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9603:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9603:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "9685:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9696:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9681:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9681:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "9701:26:27",
                            "type": "",
                            "value": "ner nor approved for all"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9674:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9674:54:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9674:54:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "9737:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9749:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9760:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9745:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9745:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "9737:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9501:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9515:4:27",
                    "type": ""
                  }
                ],
                "src": "9350:420:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "9949:232:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9966:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9977:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9959:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9959:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9959:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10000:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10011:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "9996:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9996:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10016:2:27",
                            "type": "",
                            "value": "42"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "9989:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9989:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "9989:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10039:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10050:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10035:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10035:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10055:34:27",
                            "type": "",
                            "value": "ERC721: balance query for the ze"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10028:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10028:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10028:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10110:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10121:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10106:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10106:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10126:12:27",
                            "type": "",
                            "value": "ro address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10099:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10099:40:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10099:40:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10148:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10160:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10171:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10156:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10156:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10148:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "9926:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "9940:4:27",
                    "type": ""
                  }
                ],
                "src": "9775:406:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10360:231:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10377:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10388:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10370:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10370:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10370:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10411:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10422:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10407:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10407:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10427:2:27",
                            "type": "",
                            "value": "41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10400:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10400:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10400:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10450:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10461:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10446:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10446:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10466:34:27",
                            "type": "",
                            "value": "ERC721: owner query for nonexist"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10439:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10439:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10439:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10521:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10532:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10517:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10517:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10537:11:27",
                            "type": "",
                            "value": "ent token"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10510:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10510:39:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10510:39:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10558:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10570:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10581:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10566:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10566:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10558:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10337:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10351:4:27",
                    "type": ""
                  }
                ],
                "src": "10186:405:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "10770:223:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10787:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10798:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10780:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10780:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10780:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10821:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10832:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10817:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10817:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10837:2:27",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10810:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10810:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10810:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10860:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10871:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10856:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10856:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10876:34:27",
                            "type": "",
                            "value": "Roles: account does not have rol"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10849:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10849:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10849:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "10931:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10942:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "10927:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10927:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "10947:3:27",
                            "type": "",
                            "value": "e"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "10920:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10920:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "10920:31:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "10960:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10972:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10983:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10968:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10968:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "10960:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "10747:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "10761:4:27",
                    "type": ""
                  }
                ],
                "src": "10596:397:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11172:182:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11189:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11200:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11182:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11182:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11182:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11223:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11234:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11219:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11219:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11239:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11212:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11212:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11212:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11262:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11273:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11258:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11258:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11278:34:27",
                            "type": "",
                            "value": "ERC721: mint to the zero address"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11251:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11251:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11251:62:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11322:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11334:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11345:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11330:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11330:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11322:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11149:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11163:4:27",
                    "type": ""
                  }
                ],
                "src": "10998:356:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11533:234:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11550:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11561:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11543:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11543:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11543:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11584:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11595:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11580:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11580:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11600:2:27",
                            "type": "",
                            "value": "44"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11573:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11573:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11573:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11623:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11634:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11619:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11619:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11639:34:27",
                            "type": "",
                            "value": "ERC721: approved query for nonex"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11612:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11612:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11612:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11694:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "11705:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11690:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11690:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "11710:14:27",
                            "type": "",
                            "value": "istent token"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11683:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11683:42:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11683:42:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "11734:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11746:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11757:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11742:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11742:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "11734:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11510:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11524:4:27",
                    "type": ""
                  }
                ],
                "src": "11359:408:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "11946:182:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11963:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11974:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11956:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11956:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11956:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "11997:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12008:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "11993:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "11993:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12013:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "11986:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11986:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "11986:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12036:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12047:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12032:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12032:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12052:34:27",
                            "type": "",
                            "value": "Ownable: caller is not the owner"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12025:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12025:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12025:62:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12096:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12108:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12119:2:27",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12104:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12104:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12096:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "11923:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "11937:4:27",
                    "type": ""
                  }
                ],
                "src": "11772:356:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12307:224:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12324:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12335:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12317:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12317:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12317:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12358:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12369:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12354:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12354:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12374:2:27",
                            "type": "",
                            "value": "34"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12347:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12347:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12347:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12397:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12408:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12393:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12393:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12413:34:27",
                            "type": "",
                            "value": "Roles: account is the zero addre"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12386:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12386:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12386:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12468:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12479:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12464:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12464:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12484:4:27",
                            "type": "",
                            "value": "ss"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12457:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12457:32:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12457:32:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12498:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12510:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12521:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12506:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12506:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12498:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12284:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12298:4:27",
                    "type": ""
                  }
                ],
                "src": "12133:398:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "12710:231:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12727:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12738:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12720:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12720:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12720:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12761:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12772:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12757:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12757:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12777:2:27",
                            "type": "",
                            "value": "41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12750:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12750:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12750:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12800:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12811:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12796:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12796:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12816:34:27",
                            "type": "",
                            "value": "ERC721: transfer of token that i"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12789:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12789:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12789:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "12871:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "12882:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "12867:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "12867:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "12887:11:27",
                            "type": "",
                            "value": "s not own"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "12860:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12860:39:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "12860:39:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "12908:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12920:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12931:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12916:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12916:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "12908:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "12687:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "12701:4:27",
                    "type": ""
                  }
                ],
                "src": "12536:405:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13120:237:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13137:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13148:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13130:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13130:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13130:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13171:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13182:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13167:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13167:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13187:2:27",
                            "type": "",
                            "value": "47"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13160:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13160:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13160:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13210:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13221:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13206:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13206:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13226:34:27",
                            "type": "",
                            "value": "ERC721Metadata: URI query for no"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13199:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13199:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13199:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13281:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13292:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13277:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13277:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13297:17:27",
                            "type": "",
                            "value": "nexistent token"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13270:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13270:45:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13270:45:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13324:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13336:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13347:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13332:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13332:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13324:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13097:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13111:4:27",
                    "type": ""
                  }
                ],
                "src": "12946:411:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13536:223:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13553:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13564:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13546:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13546:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13546:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13587:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13598:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13583:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13583:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13603:2:27",
                            "type": "",
                            "value": "33"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13576:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13576:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13576:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13626:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13637:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13622:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13622:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13642:34:27",
                            "type": "",
                            "value": "ERC721: approval to current owne"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13615:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13615:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13615:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13697:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "13708:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13693:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13693:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "13713:3:27",
                            "type": "",
                            "value": "r"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13686:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13686:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13686:31:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "13726:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13738:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13749:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13734:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13734:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "13726:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13513:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13527:4:27",
                    "type": ""
                  }
                ],
                "src": "13362:397:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "13938:239:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13955:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13966:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13948:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13948:21:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13948:21:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "13989:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14000:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "13985:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "13985:18:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14005:2:27",
                            "type": "",
                            "value": "49"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "13978:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13978:30:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "13978:30:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14028:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14039:2:27",
                                "type": "",
                                "value": "64"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14024:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14024:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "14044:34:27",
                            "type": "",
                            "value": "ERC721: transfer caller is not o"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14017:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14017:62:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14017:62:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "14099:9:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "14110:2:27",
                                "type": "",
                                "value": "96"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "14095:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14095:18:27"
                          },
                          {
                            "kind": "string",
                            "nodeType": "YulLiteral",
                            "src": "14115:19:27",
                            "type": "",
                            "value": "wner nor approved"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14088:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14088:47:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14088:47:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14144:27:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14156:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14167:3:27",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14152:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14152:19:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14144:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "13915:9:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "13929:4:27",
                    "type": ""
                  }
                ],
                "src": "13764:413:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14283:76:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "14293:26:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14305:9:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14316:2:27",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14301:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14301:18:27"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "14293:4:27"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14335:9:27"
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "14346:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "14328:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14328:25:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "14328:25:27"
                    }
                  ]
                },
                "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "headStart",
                    "nodeType": "YulTypedName",
                    "src": "14252:9:27",
                    "type": ""
                  },
                  {
                    "name": "value0",
                    "nodeType": "YulTypedName",
                    "src": "14263:6:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "tail",
                    "nodeType": "YulTypedName",
                    "src": "14274:4:27",
                    "type": ""
                  }
                ],
                "src": "14182:177:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14412:80:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14439:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14441:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14441:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14441:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14428:1:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "14435:1:27"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "14431:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "14431:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14425:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14425:13:27"
                      },
                      "nodeType": "YulIf",
                      "src": "14422:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14470:16:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14481:1:27"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14484:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14477:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14477:9:27"
                      },
                      "variableNames": [
                        {
                          "name": "sum",
                          "nodeType": "YulIdentifier",
                          "src": "14470:3:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_add_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14395:1:27",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14398:1:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "sum",
                    "nodeType": "YulTypedName",
                    "src": "14404:3:27",
                    "type": ""
                  }
                ],
                "src": "14364:128:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14543:74:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14566:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "14568:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14568:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14568:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14563:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "14556:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14556:9:27"
                      },
                      "nodeType": "YulIf",
                      "src": "14553:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14597:14:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14606:1:27"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14609:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "14602:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14602:9:27"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "14597:1:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_div_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14528:1:27",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14531:1:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "14537:1:27",
                    "type": ""
                  }
                ],
                "src": "14497:120:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14671:76:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14693:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "14695:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14695:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14695:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14687:1:27"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14690:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14684:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14684:8:27"
                      },
                      "nodeType": "YulIf",
                      "src": "14681:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "14724:17:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "14736:1:27"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "14739:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14732:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14732:9:27"
                      },
                      "variableNames": [
                        {
                          "name": "diff",
                          "nodeType": "YulIdentifier",
                          "src": "14724:4:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "checked_sub_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "14653:1:27",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "14656:1:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "diff",
                    "nodeType": "YulTypedName",
                    "src": "14662:4:27",
                    "type": ""
                  }
                ],
                "src": "14622:125:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "14805:205:27",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "14815:10:27",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14824:1:27",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "i",
                          "nodeType": "YulTypedName",
                          "src": "14819:1:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14884:63:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "14909:3:27"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "14914:1:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14905:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14905:11:27"
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "14928:3:27"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "14933:1:27"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "14924:3:27"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "14924:11:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "mload",
                                    "nodeType": "YulIdentifier",
                                    "src": "14918:5:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14918:18:27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14898:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14898:39:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14898:39:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14845:1:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14848:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "14842:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14842:13:27"
                      },
                      "nodeType": "YulForLoop",
                      "post": {
                        "nodeType": "YulBlock",
                        "src": "14856:19:27",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "14858:15:27",
                            "value": {
                              "arguments": [
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "14867:1:27"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "14870:2:27",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "14863:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14863:10:27"
                            },
                            "variableNames": [
                              {
                                "name": "i",
                                "nodeType": "YulIdentifier",
                                "src": "14858:1:27"
                              }
                            ]
                          }
                        ]
                      },
                      "pre": {
                        "nodeType": "YulBlock",
                        "src": "14838:3:27",
                        "statements": []
                      },
                      "src": "14834:113:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "14973:31:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "dst",
                                      "nodeType": "YulIdentifier",
                                      "src": "14986:3:27"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "14991:6:27"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "14982:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "14982:16:27"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15000:1:27",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "14975:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "14975:27:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "14975:27:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "14962:1:27"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "14965:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "14959:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14959:13:27"
                      },
                      "nodeType": "YulIf",
                      "src": "14956:2:27"
                    }
                  ]
                },
                "name": "copy_memory_to_memory",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "src",
                    "nodeType": "YulTypedName",
                    "src": "14783:3:27",
                    "type": ""
                  },
                  {
                    "name": "dst",
                    "nodeType": "YulTypedName",
                    "src": "14788:3:27",
                    "type": ""
                  },
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "14793:6:27",
                    "type": ""
                  }
                ],
                "src": "14752:258:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15070:325:27",
                  "statements": [
                    {
                      "nodeType": "YulAssignment",
                      "src": "15080:22:27",
                      "value": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15094:1:27",
                            "type": "",
                            "value": "1"
                          },
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "15097:4:27"
                          }
                        ],
                        "functionName": {
                          "name": "shr",
                          "nodeType": "YulIdentifier",
                          "src": "15090:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15090:12:27"
                      },
                      "variableNames": [
                        {
                          "name": "length",
                          "nodeType": "YulIdentifier",
                          "src": "15080:6:27"
                        }
                      ]
                    },
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "15111:38:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "data",
                            "nodeType": "YulIdentifier",
                            "src": "15141:4:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15147:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "15137:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15137:12:27"
                      },
                      "variables": [
                        {
                          "name": "outOfPlaceEncoding",
                          "nodeType": "YulTypedName",
                          "src": "15115:18:27",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15188:31:27",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "15190:27:27",
                            "value": {
                              "arguments": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "15204:6:27"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15212:4:27",
                                  "type": "",
                                  "value": "0x7f"
                                }
                              ],
                              "functionName": {
                                "name": "and",
                                "nodeType": "YulIdentifier",
                                "src": "15200:3:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15200:17:27"
                            },
                            "variableNames": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "15190:6:27"
                              }
                            ]
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "15168:18:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15161:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15161:26:27"
                      },
                      "nodeType": "YulIf",
                      "src": "15158:2:27"
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15278:111:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15299:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15306:3:27",
                                      "type": "",
                                      "value": "224"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "15311:10:27",
                                      "type": "",
                                      "value": "0x4e487b71"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "shl",
                                    "nodeType": "YulIdentifier",
                                    "src": "15302:3:27"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "15302:20:27"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "15292:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15292:31:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15292:31:27"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15343:1:27",
                                  "type": "",
                                  "value": "4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15346:4:27",
                                  "type": "",
                                  "value": "0x22"
                                }
                              ],
                              "functionName": {
                                "name": "mstore",
                                "nodeType": "YulIdentifier",
                                "src": "15336:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15336:15:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15336:15:27"
                          },
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15371:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "15374:4:27",
                                  "type": "",
                                  "value": "0x24"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "15364:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15364:15:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15364:15:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "outOfPlaceEncoding",
                            "nodeType": "YulIdentifier",
                            "src": "15234:18:27"
                          },
                          {
                            "arguments": [
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "15257:6:27"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15265:2:27",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "15254:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15254:14:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15231:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15231:38:27"
                      },
                      "nodeType": "YulIf",
                      "src": "15228:2:27"
                    }
                  ]
                },
                "name": "extract_byte_array_length",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "data",
                    "nodeType": "YulTypedName",
                    "src": "15050:4:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "length",
                    "nodeType": "YulTypedName",
                    "src": "15059:6:27",
                    "type": ""
                  }
                ],
                "src": "15015:380:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15447:88:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15478:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x11",
                                "nodeType": "YulIdentifier",
                                "src": "15480:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15480:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15480:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15463:5:27"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15474:1:27",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "15470:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15470:6:27"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "15460:2:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15460:17:27"
                      },
                      "nodeType": "YulIf",
                      "src": "15457:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15509:20:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "15520:5:27"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15527:1:27",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15516:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15516:13:27"
                      },
                      "variableNames": [
                        {
                          "name": "ret",
                          "nodeType": "YulIdentifier",
                          "src": "15509:3:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "increment_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "15429:5:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "ret",
                    "nodeType": "YulTypedName",
                    "src": "15439:3:27",
                    "type": ""
                  }
                ],
                "src": "15400:135:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15578:74:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "15601:22:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "panic_error_0x12",
                                "nodeType": "YulIdentifier",
                                "src": "15603:16:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "15603:18:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "15603:18:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15598:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "15591:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15591:9:27"
                      },
                      "nodeType": "YulIf",
                      "src": "15588:2:27"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "15632:14:27",
                      "value": {
                        "arguments": [
                          {
                            "name": "x",
                            "nodeType": "YulIdentifier",
                            "src": "15641:1:27"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "15644:1:27"
                          }
                        ],
                        "functionName": {
                          "name": "mod",
                          "nodeType": "YulIdentifier",
                          "src": "15637:3:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15637:9:27"
                      },
                      "variableNames": [
                        {
                          "name": "r",
                          "nodeType": "YulIdentifier",
                          "src": "15632:1:27"
                        }
                      ]
                    }
                  ]
                },
                "name": "mod_t_uint256",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "x",
                    "nodeType": "YulTypedName",
                    "src": "15563:1:27",
                    "type": ""
                  },
                  {
                    "name": "y",
                    "nodeType": "YulTypedName",
                    "src": "15566:1:27",
                    "type": ""
                  }
                ],
                "returnVariables": [
                  {
                    "name": "r",
                    "nodeType": "YulTypedName",
                    "src": "15572:1:27",
                    "type": ""
                  }
                ],
                "src": "15540:112:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15689:95:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15706:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15713:3:27",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15718:10:27",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15709:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15709:20:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15699:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15699:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15699:31:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15746:1:27",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15749:4:27",
                            "type": "",
                            "value": "0x11"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15739:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15739:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15739:15:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15770:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15773:4:27",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "15763:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15763:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15763:15:27"
                    }
                  ]
                },
                "name": "panic_error_0x11",
                "nodeType": "YulFunctionDefinition",
                "src": "15657:127:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15821:95:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15838:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15845:3:27",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15850:10:27",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15841:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15841:20:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15831:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15831:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15831:31:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15878:1:27",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15881:4:27",
                            "type": "",
                            "value": "0x12"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15871:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15871:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15871:15:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15902:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15905:4:27",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "15895:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15895:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15895:15:27"
                    }
                  ]
                },
                "name": "panic_error_0x12",
                "nodeType": "YulFunctionDefinition",
                "src": "15789:127:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "15953:95:27",
                  "statements": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15970:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15977:3:27",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "15982:10:27",
                                "type": "",
                                "value": "0x4e487b71"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "15973:3:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "15973:20:27"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "15963:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15963:31:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "15963:31:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16010:1:27",
                            "type": "",
                            "value": "4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16013:4:27",
                            "type": "",
                            "value": "0x41"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "16003:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16003:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16003:15:27"
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16034:1:27",
                            "type": "",
                            "value": "0"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16037:4:27",
                            "type": "",
                            "value": "0x24"
                          }
                        ],
                        "functionName": {
                          "name": "revert",
                          "nodeType": "YulIdentifier",
                          "src": "16027:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16027:15:27"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "16027:15:27"
                    }
                  ]
                },
                "name": "panic_error_0x41",
                "nodeType": "YulFunctionDefinition",
                "src": "15921:127:27"
              },
              {
                "body": {
                  "nodeType": "YulBlock",
                  "src": "16097:87:27",
                  "statements": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "16162:16:27",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16171:1:27",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "16174:1:27",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "revert",
                                "nodeType": "YulIdentifier",
                                "src": "16164:6:27"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "16164:12:27"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "16164:12:27"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "16120:5:27"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "16131:5:27"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16142:3:27",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16147:10:27",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "16138:3:27"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16138:20:27"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "16127:3:27"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16127:32:27"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "16117:2:27"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16117:43:27"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16110:6:27"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16110:51:27"
                      },
                      "nodeType": "YulIf",
                      "src": "16107:2:27"
                    }
                  ]
                },
                "name": "validator_revert_bytes4",
                "nodeType": "YulFunctionDefinition",
                "parameters": [
                  {
                    "name": "value",
                    "nodeType": "YulTypedName",
                    "src": "16086:5:27",
                    "type": ""
                  }
                ],
                "src": "16053:131:27"
              }
            ]
          },
          "contents": "{\n    { }\n    function abi_decode_available_length_bytes(src, length, end) -> array\n    {\n        let _1 := 0xffffffffffffffff\n        if gt(length, _1) { panic_error_0x41() }\n        let _2 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 31), _2), 63), _2))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        array := memPtr\n        mstore(memPtr, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), src, length)\n        mstore(add(add(memPtr, length), 0x20), 0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value3, value3) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(value3, value3) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value3, value3) }\n        value3 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value1, value1) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(value0, value0) }\n        value0 := abi_decode_available_length_bytes(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr_t_stringliteral_94311adc0a0cd4e10be11b23bd4316b8cffa4adf693e8f96f5c075aa439a7972__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory(add(value1, 0x20), end_1, length_1)\n        let end_2 := add(end_1, length_1)\n        mstore(end_2, \".json\")\n        end := add(end_2, 5)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_bytes(value3, add(headStart, 128))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1e766a06da43a53d0f4c380e06e5a342e14d5af1bf8501996c844905530ca84e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 50)\n        mstore(add(headStart, 64), \"ERC721: transfer to non ERC721Re\")\n        mstore(add(headStart, 96), \"ceiver implementer\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2a63ce106ef95058ed21fd07c42a10f11dc5c32ac13a4e847923f7759f635d57__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"ERC721: token already minted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_455fea98ea03c32d7dd1a6f1426917d80529bf47b3ccbde74e7206e889e709f4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC721: transfer to the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_45fe4329685be5ecd250fd0e6a25aea0ea4d0e30fb6a73c118b95749e6d70d05__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"ERC721: approve to caller\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_49d10a114f36d55debe3771eaf3da9644ffbf942300b327e99ab15031f5393f6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 52)\n        mstore(add(headStart, 64), \"OperatorRole: caller does not ha\")\n        mstore(add(headStart, 96), \"ve the Operator role\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5797d1ccb08b83980dd0c07ea40d8f6a64d35fff736a19bdd17522954cb0899c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: operator query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6d83cef3e0cb19b8320a9c5feb26b56bbb08f152a8e61b12eca3302d8d68b23d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 56)\n        mstore(add(headStart, 64), \"ERC721: approve caller is not ow\")\n        mstore(add(headStart, 96), \"ner nor approved for all\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7395d4d3901c50cdfcab223d072f9aa36241df5d883e62cbf147ee1b05a9e6ba__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"ERC721: balance query for the ze\")\n        mstore(add(headStart, 96), \"ro address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7481f3df2a424c0755a1ad2356614e9a5a358d461ea2eae1f89cb21cbad00397__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: owner query for nonexist\")\n        mstore(add(headStart, 96), \"ent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8a66f4bb6512ffbfcc3db9b42318eb65f26ac15163eaa9a1e5cfa7bee9d1c7c6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"ERC721: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9291e0f44949204f2e9b40e6be090924979d6047b2365868f4e9f027722eb89d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 44)\n        mstore(add(headStart, 64), \"ERC721: approved query for nonex\")\n        mstore(add(headStart, 96), \"istent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a01073130a885d6c1c1af6ac75fc3b1c4f9403c235362962bbf528e2bd87d950__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"ERC721: transfer of token that i\")\n        mstore(add(headStart, 96), \"s not own\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_a2d45c0fba603d40d82d590051761ca952d1ab9d78cca6d0d464d7b6e961a9cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 47)\n        mstore(add(headStart, 64), \"ERC721Metadata: URI query for no\")\n        mstore(add(headStart, 96), \"nexistent token\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_b51b4875eede07862961e8f9365c6749f5fe55c6ee5d7a9e42b6912ad0b15942__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC721: approval to current owne\")\n        mstore(add(headStart, 96), \"r\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c8682f3ad98807db59a6ec6bb812b72fed0a66e3150fa8239699ee83885247f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"ERC721: transfer caller is not o\")\n        mstore(add(headStart, 96), \"wner nor approved\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function mod_t_uint256(x, y) -> r\n    {\n        if iszero(y) { panic_error_0x12() }\n        r := mod(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x12()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n    }\n}",
          "id": 27,
          "language": "Yul",
          "name": "#utility.yul"
        }
      ],
      "immutableReferences": {},
      "linkReferences": {},
      "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1A9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0xF9 JUMPI DUP1 PUSH4 0xA3F4DF7E GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xC87B56DD GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x392 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0xF76F8D78 EQ PUSH2 0x3F4 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0xA3F4DF7E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xAC8A584A EQ PUSH2 0x36C JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x37F JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2F1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x302 JUMPI DUP1 PUSH4 0x9870D7FE EQ PUSH2 0x30A JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x31D JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x2C0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x77EEBBDB EQ PUSH2 0x2E9 JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2AB6F8DB GT PUSH2 0x166 JUMPI DUP1 PUSH4 0x42966C68 GT PUSH2 0x140 JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x6352211E EQ PUSH2 0x292 JUMPI DUP1 PUSH4 0x6C0360EB EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x6D70F7AE EQ PUSH2 0x2AD JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x2AB6F8DB EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x26C JUMPI PUSH2 0x1A9 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1AE JUMPI DUP1 PUSH4 0x2FE5305 EQ PUSH2 0x1D6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x1EB JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x23E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1C1 PUSH2 0x1BC CALLDATASIZE PUSH1 0x4 PUSH2 0x18E3 JUMP JUMPDEST PUSH2 0x41A JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E9 PUSH2 0x1E4 CALLDATASIZE PUSH1 0x4 PUSH2 0x191B JUMP JUMPDEST PUSH2 0x46E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1F3 PUSH2 0x4B8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CD SWAP2 SWAP1 PUSH2 0x1A21 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x20E CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x54A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x239 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x6F5 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x727 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x267 CALLDATASIZE PUSH1 0x4 PUSH2 0x18BA JUMP JUMPDEST PUSH2 0x732 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x27A CALLDATASIZE PUSH1 0x4 PUSH2 0x17CC JUMP JUMPDEST PUSH2 0x7AE JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x28D CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST PUSH2 0x213 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0x7FA JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x871 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x2BB CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x880 JUMP JUMPDEST PUSH2 0x2D3 PUSH2 0x2CE CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x88D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1CD JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x914 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x948 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x213 JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x9D6 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x318 CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0x9E5 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x1880 JUMP JUMPDEST PUSH2 0xA18 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1A DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x546F74656D20466F7265737420436F6D6D756E697479204E4654000000000000 DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x37A CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xAEA JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x1807 JUMP JUMPDEST PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x1F3 PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1961 JUMP JUMPDEST PUSH2 0xB55 JUMP JUMPDEST PUSH2 0x1C1 PUSH2 0x3B3 CALLDATASIZE PUSH1 0x4 PUSH2 0x179A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0x1E9 PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x1780 JUMP JUMPDEST PUSH2 0xC30 JUMP JUMPDEST PUSH2 0x1F3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x7 DUP2 MSTORE PUSH1 0x20 ADD PUSH7 0x1518D193D39195 PUSH1 0xCA SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x80AC58CD PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x44B JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x5B5E139F PUSH1 0xE0 SHL EQ JUMPDEST DUP1 PUSH2 0x466 JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x4A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH2 0x4B4 SWAP1 PUSH1 0x8 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH2 0x165A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x540 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x515 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x540 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x523 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x5C3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76656420717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO PUSH2 0x658 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76616C20746F2063757272656E74206F776E65 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x39 PUSH1 0xF9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ DUP1 PUSH2 0x674 JUMPI POP PUSH2 0x674 DUP2 CALLER PUSH2 0x3B3 JUMP JUMPDEST PUSH2 0x6E6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x38 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F76652063616C6C6572206973206E6F74206F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E6572206E6F7220617070726F76656420666F7220616C6C0000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 PUSH2 0xDC7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x700 CALLER JUMPDEST DUP3 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0x71C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 DUP4 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x730 CALLER PUSH2 0x10CC JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x73B CALLER PUSH2 0x2BB JUMP JUMPDEST PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x34 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F70657261746F72526F6C653A2063616C6C657220646F6573206E6F74206861 PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0x766520746865204F70657261746F7220726F6C65 PUSH1 0x60 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x4B4 DUP3 DUP3 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x6F0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xB1D JUMP JUMPDEST PUSH2 0x7D2 CALLER PUSH2 0x6FA JUMP JUMPDEST PUSH2 0x7EE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x1250 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP1 PUSH2 0x466 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F776E657220717565727920666F72206E6F6E6578697374 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x32B73A103A37B5B2B7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x8 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x466 PUSH1 0x7 DUP4 PUSH2 0xCC8 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8F8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A2062616C616E636520717565727920666F7220746865207A65 PUSH1 0x44 DUP3 ADD MSTORE PUSH10 0x726F2061646472657373 PUSH1 0xB0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x93E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x730 PUSH1 0x0 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x8 DUP1 SLOAD PUSH2 0x955 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x981 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST DUP1 ISZERO PUSH2 0x9CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x9A3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x9CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x9B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x4C7 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xA0F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x133B JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND CALLER EQ ISZERO PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20617070726F766520746F2063616C6C657200000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND DUP5 ISZERO ISZERO OR SWAP1 SSTORE SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0xADE SWAP2 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB14 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x10CC JUMP JUMPDEST PUSH2 0xB27 CALLER DUP4 PUSH2 0xE35 JUMP JUMPDEST PUSH2 0xB43 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1ABB JUMP JUMPDEST PUSH2 0xB4F DUP5 DUP5 DUP5 DUP5 PUSH2 0x137D JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x60 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xBD4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732314D657461646174613A2055524920717565727920666F72206E6F PUSH1 0x44 DUP3 ADD MSTORE PUSH15 0x3732BC34B9BA32B73A103A37B5B2B7 PUSH1 0x89 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBDE PUSH2 0x871 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 MLOAD GT PUSH2 0xBFE JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0xC29 JUMP JUMPDEST DUP1 PUSH2 0xC08 DUP5 PUSH2 0x13B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xC19 SWAP3 SWAP2 SWAP1 PUSH2 0x19A5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xC5A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A86 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xCBF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x7F7 DUP2 PUSH2 0x12EB JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0xD2B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420697320746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH2 0xD55 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST ISZERO PUSH2 0xDA2 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420616C72656164792068617320726F6C6500 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SWAP1 PUSH2 0xDFC DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEAE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206F70657261746F7220717565727920666F72206E6F6E6578 PUSH1 0x44 DUP3 ADD MSTORE PUSH12 0x34B9BA32B73A103A37B5B2B7 PUSH1 0xA1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEB9 DUP4 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0xEF4 JUMPI POP DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xEE9 DUP5 PUSH2 0x54A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0xF24 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 DUP9 AND DUP4 MSTORE SWAP3 SWAP1 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xF3F DUP3 PUSH2 0x7FA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xFA7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E73666572206F6620746F6B656E20746861742069 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x39903737BA1037BBB7 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1009 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x1014 PUSH1 0x0 DUP3 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x103D SWAP1 DUP5 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x106B SWAP1 DUP5 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP5 SWAP4 SWAP2 DUP8 AND SWAP2 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP2 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x10D7 PUSH1 0x7 DUP3 PUSH2 0x14CB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0x80C0B871B97B595B16A7741C1B06FED0C6F6F558639F18CCBCE50724325DC40D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x1164 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A206D696E7420746F20746865207A65726F2061646472657373 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x11C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4552433732313A20746F6B656E20616C7265616479206D696E74656400000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x11F2 SWAP1 DUP5 SWAP1 PUSH2 0x1B0C JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD DUP4 SWAP3 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP3 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x125B DUP3 PUSH2 0x7FA JUMP JUMPDEST SWAP1 POP PUSH2 0x1268 PUSH1 0x0 DUP4 PUSH2 0xDC7 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP3 SWAP1 PUSH2 0x1291 SWAP1 DUP5 SWAP1 PUSH2 0x1B38 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE MLOAD DUP4 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 DUP4 SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1346 PUSH1 0x7 DUP3 PUSH2 0xD4B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND SWAP1 PUSH32 0xAC6FA858E9350A46CEC16539926E0FDE25B7629F84B5A72BFFAAE4DF888AE86D SWAP1 PUSH1 0x0 SWAP1 LOG2 POP JUMP JUMPDEST PUSH2 0x1388 DUP5 DUP5 DUP5 PUSH2 0xF2C JUMP JUMPDEST PUSH2 0x1394 DUP5 DUP5 DUP5 DUP5 PUSH2 0x154D JUMP JUMPDEST PUSH2 0xB4F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH2 0x13D5 JUMPI POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x3 PUSH1 0xFC SHL PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x469 JUMP JUMPDEST DUP2 PUSH1 0x0 JUMPDEST DUP2 ISZERO PUSH2 0x13FF JUMPI DUP1 PUSH2 0x13E9 DUP2 PUSH2 0x1BB6 JUMP JUMPDEST SWAP2 POP PUSH2 0x13F8 SWAP1 POP PUSH1 0xA DUP4 PUSH2 0x1B24 JUMP JUMPDEST SWAP2 POP PUSH2 0x13D9 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1428 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x1452 JUMPI PUSH1 0x20 DUP3 ADD DUP2 DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0xF24 JUMPI PUSH2 0x1467 PUSH1 0x1 DUP4 PUSH2 0x1B38 JUMP JUMPDEST SWAP2 POP PUSH2 0x1474 PUSH1 0xA DUP7 PUSH2 0x1BD1 JUMP JUMPDEST PUSH2 0x147F SWAP1 PUSH1 0x30 PUSH2 0x1B0C JUMP JUMPDEST PUSH1 0xF8 SHL DUP2 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x14A2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH2 0x14C4 PUSH1 0xA DUP7 PUSH2 0x1B24 JUMP JUMPDEST SWAP5 POP PUSH2 0x1456 JUMP JUMPDEST PUSH2 0x14D5 DUP3 DUP3 PUSH2 0xCC8 JUMP JUMPDEST PUSH2 0x152B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526F6C65733A206163636F756E7420646F6573206E6F74206861766520726F6C PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x65 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x498 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO PUSH2 0x164F JUMPI PUSH1 0x40 MLOAD PUSH4 0xA85BD01 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0x1591 SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x19E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x15AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x15DB JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x15D8 SWAP2 DUP2 ADD SWAP1 PUSH2 0x18FF JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1635 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0x1609 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x160E JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH2 0x162D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x498 SWAP1 PUSH2 0x1A34 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT AND PUSH4 0xA85BD01 PUSH1 0xE1 SHL EQ SWAP1 POP PUSH2 0xF24 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x1666 SWAP1 PUSH2 0x1B7B JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x1688 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x16CE JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x16A1 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x16CE JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x16CE JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x16CE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x16B3 JUMP JUMPDEST POP PUSH2 0x16DA SWAP3 SWAP2 POP PUSH2 0x16DE JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x16DA JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x16DF JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP5 GT ISZERO PUSH2 0x170E JUMPI PUSH2 0x170E PUSH2 0x1C11 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP6 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1736 JUMPI PUSH2 0x1736 PUSH2 0x1C11 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP1 SWAP4 POP DUP6 DUP2 MSTORE DUP7 DUP7 DUP7 ADD GT ISZERO PUSH2 0x174F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 DUP6 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP8 DUP4 ADD ADD MSTORE POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x469 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1791 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xC29 DUP3 PUSH2 0x1769 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x17AC JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17B5 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH2 0x17C3 PUSH1 0x20 DUP5 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x17E0 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x17E9 DUP5 PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP PUSH2 0x17F7 PUSH1 0x20 DUP6 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x181C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1825 DUP6 PUSH2 0x1769 JUMP JUMPDEST SWAP4 POP PUSH2 0x1833 PUSH1 0x20 DUP7 ADD PUSH2 0x1769 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1855 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0x1865 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1874 DUP8 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16F3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1892 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x189B DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x18AF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x18CC JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x18D5 DUP4 PUSH2 0x1769 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F4 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0xC29 DUP2 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1910 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0xC29 DUP2 PUSH2 0x1C27 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x192C JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1942 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 ADD PUSH1 0x1F DUP2 ADD DUP5 SGT PUSH2 0x1952 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xF24 DUP5 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x16F3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1972 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x1991 DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x1B4F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x19B7 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x1B4F JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x19CB DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0x1B4F JUMP JUMPDEST PUSH5 0x173539B7B7 PUSH1 0xD9 SHL SWAP2 ADD SWAP1 DUP2 MSTORE PUSH1 0x5 ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 DUP2 AND DUP3 MSTORE DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP1 PUSH2 0x1A17 SWAP1 DUP4 ADD DUP5 PUSH2 0x1979 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0xC29 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1979 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x32 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E7366657220746F206E6F6E204552433732315265 PUSH1 0x40 DUP3 ADD MSTORE PUSH18 0x31B2B4BB32B91034B6B83632B6B2B73A32B9 PUSH1 0x71 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP2 DUP2 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x31 SWAP1 DUP3 ADD MSTORE PUSH32 0x4552433732313A207472616E736665722063616C6C6572206973206E6F74206F PUSH1 0x40 DUP3 ADD MSTORE PUSH17 0x1DDB995C881B9BDC88185C1C1C9BDD9959 PUSH1 0x7A SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1B1F JUMPI PUSH2 0x1B1F PUSH2 0x1BE5 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1B33 JUMPI PUSH2 0x1B33 PUSH2 0x1BFB JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1B4A JUMPI PUSH2 0x1B4A PUSH2 0x1BE5 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1B6A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x1B52 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xB4F JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1B8F JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1BB0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1BCA JUMPI PUSH2 0x1BCA PUSH2 0x1BE5 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1BE0 JUMPI PUSH2 0x1BE0 PUSH2 0x1BFB JUMP JUMPDEST POP MOD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x7F7 JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP10 0xC1 0xC3 PUSH18 0xC4C6AD09BA5B079C9821B8307D8E5318CB13 LOG3 STOP DIV PUSH10 0x6BF41D371F4864736F6C PUSH4 0x43000803 STOP CALLER ",
      "sourceMap": "362:1440:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1496:300:4;;;;;;:::i;:::-;;:::i;:::-;;;5963:14:27;;5956:22;5938:41;;5926:2;5911:18;1496:300:4;;;;;;;;1417:91:15;;;;;;:::i;:::-;;:::i;:::-;;2414:98:4;;;:::i;:::-;;;;;;;:::i;3925:217::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;5261:32:27;;;5243:51;;5231:2;5216:18;3925:217:4;5198:102:27;3463:401:4;;;;;;:::i;:::-;;:::i;4789:330::-;;;;;;:::i;:::-;;:::i;762:81:21:-;;;:::i;1514:98:15:-;;;;;;:::i;:::-;;:::i;5185:179:4:-;;;;;;:::i;:::-;;:::i;1618:182:15:-;;;;;;:::i;:::-;;:::i;2117:235:4:-;;;;;;:::i;:::-;;:::i;1110:97:15:-;;;:::i;645:111:21:-;;;;;;:::i;:::-;;:::i;1855:205:4:-;;;;;;:::i;:::-;;:::i;:::-;;;14328:25:27;;;14316:2;14301:18;1855:205:4;14283:76:27;1605:92:0;;;:::i;462:24:15:-;;;:::i;973:85:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;973:85;;2576:102:4;;;:::i;1213:93:15:-;;;;;;:::i;:::-;;:::i;4209:290:4:-;;;;;;:::i;:::-;;:::i;492:58:15:-;;;;;;;;;;;;;;;;;;;;;1312:99;;;;;;:::i;:::-;;:::i;5430:320:4:-;;;;;;:::i;:::-;;:::i;755:349:15:-;;;;;;:::i;:::-;;:::i;4565:162:4:-;;;;;;:::i;:::-;-1:-1:-1;;;;;4685:25:4;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;4565:162;1846:189:0;;;;;;:::i;:::-;;:::i;556:41:15:-;;;;;;;;;;;;;;;-1:-1:-1;;;556:41:15;;;;;1496:300:4;1598:4;-1:-1:-1;;;;;;1633:40:4;;-1:-1:-1;;;1633:40:4;;:104;;-1:-1:-1;;;;;;;1689:48:4;;-1:-1:-1;;;1689:48:4;1633:104;:156;;;-1:-1:-1;;;;;;;;;;871:40:12;;;1753:36:4;1614:175;;1496:300;;;;:::o;1417:91:15:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:9;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;;;;;;;;;1482:19:15;;::::1;::::0;:10:::1;::::0;:19:::1;::::0;::::1;::::0;::::1;:::i;:::-;;1417:91:::0;:::o;2414:98:4:-;2468:13;2500:5;2493:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2414:98;:::o;3925:217::-;4001:7;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;4020:73;;;;-1:-1:-1;;;4020:73:4;;11561:2:27;4020:73:4;;;11543:21:27;11600:2;11580:18;;;11573:30;11639:34;11619:18;;;11612:62;-1:-1:-1;;;11690:18:27;;;11683:42;11742:19;;4020:73:4;11533:234:27;4020:73:4;-1:-1:-1;4111:24:4;;;;:15;:24;;;;;;-1:-1:-1;;;;;4111:24:4;;3925:217::o;3463:401::-;3543:13;3559:23;3574:7;3559:14;:23::i;:::-;3543:39;;3606:5;-1:-1:-1;;;;;3600:11:4;:2;-1:-1:-1;;;;;3600:11:4;;;3592:57;;;;-1:-1:-1;;;3592:57:4;;13564:2:27;3592:57:4;;;13546:21:27;13603:2;13583:18;;;13576:30;13642:34;13622:18;;;13615:62;-1:-1:-1;;;13693:18:27;;;13686:31;13734:19;;3592:57:4;13536:223:27;3592:57:4;666:10:9;-1:-1:-1;;;;;3681:21:4;;;;:62;;-1:-1:-1;3706:37:4;3723:5;666:10:9;3730:12:4;587:96:9;3706:37:4;3660:165;;;;-1:-1:-1;;;3660:165:4;;9552:2:27;3660:165:4;;;9534:21:27;9591:2;9571:18;;;9564:30;9630:34;9610:18;;;9603:62;9701:26;9681:18;;;9674:54;9745:19;;3660:165:4;9524:246:27;3660:165:4;3836:21;3845:2;3849:7;3836:8;:21::i;:::-;3463:401;;;:::o;4789:330::-;4978:41;666:10:9;4997:12:4;5011:7;4978:18;:41::i;:::-;4970:103;;;;-1:-1:-1;;;4970:103:4;;;;;;;:::i;:::-;5084:28;5094:4;5100:2;5104:7;5084:9;:28::i;762:81:21:-;807:29;666:10:9;807:15:21;:29::i;:::-;762:81::o;1514:98:15:-;519:24:21;666:10:9;530:12:21;587:96:9;519:24:21;498:123;;;;-1:-1:-1;;;498:123:21;;8718:2:27;498:123:21;;;8700:21:27;8757:2;8737:18;;;8730:30;8796:34;8776:18;;;8769:62;-1:-1:-1;;;8847:18:27;;;8840:50;8907:19;;498:123:21;8690:242:27;498:123:21;1587:18:15::1;1593:7;1602:2;1587:5;:18::i;5185:179:4:-:0;5318:39;5335:4;5341:2;5345:7;5318:39;;;;;;;;;;;;:16;:39::i;1618:182:15:-;1674:41;666:10:9;1693:12:15;587:96:9;1674:41:15;1666:103;;;;-1:-1:-1;;;1666:103:15;;;;;;;:::i;:::-;1779:14;1785:7;1779:5;:14::i;:::-;1618:182;:::o;2117:235:4:-;2189:7;2224:16;;;:7;:16;;;;;;-1:-1:-1;;;;;2224:16:4;2258:19;2250:73;;;;-1:-1:-1;;;2250:73:4;;10388:2:27;2250:73:4;;;10370:21:27;10427:2;10407:18;;;10400:30;10466:34;10446:18;;;10439:62;-1:-1:-1;;;10517:18:27;;;10510:39;10566:19;;2250:73:4;10360:231:27;1110:97:15;1158:13;1190:10;1183:17;;;;;:::i;645:111:21:-;703:4;726:23;:10;741:7;726:14;:23::i;1855:205:4:-;1927:7;-1:-1:-1;;;;;1954:19:4;;1946:74;;;;-1:-1:-1;;;1946:74:4;;9977:2:27;1946:74:4;;;9959:21:27;10016:2;9996:18;;;9989:30;10055:34;10035:18;;;10028:62;-1:-1:-1;;;10106:18:27;;;10099:40;10156:19;;1946:74:4;9949:232:27;1946:74:4;-1:-1:-1;;;;;;2037:16:4;;;;;:9;:16;;;;;;;1855:205::o;1605:92:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:9;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1669:21:::1;1687:1;1669:9;:21::i;462:24:15:-:0;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2576:102:4:-;2632:13;2664:7;2657:14;;;;;:::i;1213:93:15:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:9;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1278:21:15::1;1291:7;1278:12;:21::i;4209:290:4:-:0;-1:-1:-1;;;;;4311:24:4;;666:10:9;4311:24:4;;4303:62;;;;-1:-1:-1;;;4303:62:4;;8364:2:27;4303:62:4;;;8346:21:27;8403:2;8383:18;;;8376:30;8442:27;8422:18;;;8415:55;8487:18;;4303:62:4;8336:175:27;4303:62:4;666:10:9;4376:32:4;;;;:18;:32;;;;;;;;-1:-1:-1;;;;;4376:42:4;;;;;;;;;;:53;;-1:-1:-1;;4376:53:4;;;;;;;:42;-1:-1:-1;;;;;4444:48:4;;4483:8;4444:48;;;;5963:14:27;5956:22;5938:41;;5926:2;5911:18;;5893:92;4444:48:4;;;;;;;;4209:290;;:::o;1312:99:15:-;1019:7:0;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:9;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;1380:24:15::1;1396:7;1380:15;:24::i;5430:320:4:-:0;5599:41;666:10:9;5632:7:4;5599:18;:41::i;:::-;5591:103;;;;-1:-1:-1;;;5591:103:4;;;;;;;:::i;:::-;5704:39;5718:4;5724:2;5728:7;5737:5;5704:13;:39::i;:::-;5430:320;;;;:::o;755:349:15:-;7287:4:4;7310:16;;;:7;:16;;;;;;828:13:15;;-1:-1:-1;;;;;7310:16:4;853:76:15;;;;-1:-1:-1;;;853:76:15;;13148:2:27;853:76:15;;;13130:21:27;13187:2;13167:18;;;13160:30;13226:34;13206:18;;;13199:62;-1:-1:-1;;;13277:18:27;;;13270:45;13332:19;;853:76:15;13120:237:27;853:76:15;940:25;968:9;:7;:9::i;:::-;940:37;;1022:1;1000:11;994:25;:29;:103;;;;;;;;;;;;;;;;;1050:11;1063:18;:7;:16;:18::i;:::-;1033:58;;;;;;;;;:::i;:::-;;;;;;;;;;;;;994:103;987:110;755:349;-1:-1:-1;;;755:349:15:o;1846:189:0:-;1019:7;1045:6;-1:-1:-1;;;;;1045:6:0;666:10:9;1185:23:0;1177:68;;;;-1:-1:-1;;;1177:68:0;;;;;;;:::i;:::-;-1:-1:-1;;;;;1934:22:0;::::1;1926:73;;;::::0;-1:-1:-1;;;1926:73:0;;7195:2:27;1926:73:0::1;::::0;::::1;7177:21:27::0;7234:2;7214:18;;;7207:30;7273:34;7253:18;;;7246:62;-1:-1:-1;;;7324:18:27;;;7317:36;7370:19;;1926:73:0::1;7167:228:27::0;1926:73:0::1;2009:19;2019:8;2009:9;:19::i;817:228:22:-:0;913:4;-1:-1:-1;;;;;941:21:22;;933:68;;;;-1:-1:-1;;;933:68:22;;12335:2:27;933:68:22;;;12317:21:27;12374:2;12354:18;;;12347:30;12413:34;12393:18;;;12386:62;-1:-1:-1;;;12464:18:27;;;12457:32;12506:19;;933:68:22;12307:224:27;933:68:22;-1:-1:-1;;;;;;1018:20:22;:11;:20;;;;;;;;;;;;;;;817:228::o;298:175::-;375:18;379:4;385:7;375:3;:18::i;:::-;374:19;366:63;;;;-1:-1:-1;;;366:63:22;;6416:2:27;366:63:22;;;6398:21:27;6455:2;6435:18;;;6428:30;6494:33;6474:18;;;6467:61;6545:18;;366:63:22;6388:181:27;366:63:22;-1:-1:-1;;;;;439:20:22;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;439:27:22;462:4;439:27;;;298:175::o;11073:171:4:-;11147:24;;;;:15;:24;;;;;:29;;-1:-1:-1;;;;;;11147:29:4;-1:-1:-1;;;;;11147:29:4;;;;;;;;:24;;11200:23;11147:24;11200:14;:23::i;:::-;-1:-1:-1;;;;;11191:46:4;;;;;;;;;;;11073:171;;:::o;7505:344::-;7598:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;7614:73;;;;-1:-1:-1;;;7614:73:4;;9139:2:27;7614:73:4;;;9121:21:27;9178:2;9158:18;;;9151:30;9217:34;9197:18;;;9190:62;-1:-1:-1;;;9268:18:27;;;9261:42;9320:19;;7614:73:4;9111:234:27;7614:73:4;7697:13;7713:23;7728:7;7713:14;:23::i;:::-;7697:39;;7765:5;-1:-1:-1;;;;;7754:16:4;:7;-1:-1:-1;;;;;7754:16:4;;:51;;;;7798:7;-1:-1:-1;;;;;7774:31:4;:20;7786:7;7774:11;:20::i;:::-;-1:-1:-1;;;;;7774:31:4;;7754:51;:87;;;-1:-1:-1;;;;;;4685:25:4;;;4662:4;4685:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;7809:32;7746:96;7505:344;-1:-1:-1;;;;7505:344:4:o;10402:560::-;10556:4;-1:-1:-1;;;;;10529:31:4;:23;10544:7;10529:14;:23::i;:::-;-1:-1:-1;;;;;10529:31:4;;10521:85;;;;-1:-1:-1;;;10521:85:4;;12738:2:27;10521:85:4;;;12720:21:27;12777:2;12757:18;;;12750:30;12816:34;12796:18;;;12789:62;-1:-1:-1;;;12867:18:27;;;12860:39;12916:19;;10521:85:4;12710:231:27;10521:85:4;-1:-1:-1;;;;;10624:16:4;;10616:65;;;;-1:-1:-1;;;10616:65:4;;7959:2:27;10616:65:4;;;7941:21:27;7998:2;7978:18;;;7971:30;8037:34;8017:18;;;8010:62;-1:-1:-1;;;8088:18:27;;;8081:34;8132:19;;10616:65:4;7931:226:27;10616:65:4;10793:29;10810:1;10814:7;10793:8;:29::i;:::-;-1:-1:-1;;;;;10833:15:4;;;;;;:9;:15;;;;;:20;;10852:1;;10833:15;:20;;10852:1;;10833:20;:::i;:::-;;;;-1:-1:-1;;;;;;;10863:13:4;;;;;;:9;:13;;;;;:18;;10880:1;;10863:13;:18;;10880:1;;10863:18;:::i;:::-;;;;-1:-1:-1;;10891:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;10891:21:4;-1:-1:-1;;;;;10891:21:4;;;;;;;;;10928:27;;10891:16;;10928:27;;;;;;;10402:560;;;:::o;980:133:21:-;1041:26;:10;1059:7;1041:17;:26::i;:::-;1082:24;;-1:-1:-1;;;;;1082:24:21;;;;;;;;980:133;:::o;9141:372:4:-;-1:-1:-1;;;;;9220:16:4;;9212:61;;;;-1:-1:-1;;;9212:61:4;;11200:2:27;9212:61:4;;;11182:21:27;;;11219:18;;;11212:30;11278:34;11258:18;;;11251:62;11330:18;;9212:61:4;11172:182:27;9212:61:4;7287:4;7310:16;;;:7;:16;;;;;;-1:-1:-1;;;;;7310:16:4;:30;9283:58;;;;-1:-1:-1;;;9283:58:4;;7602:2:27;9283:58:4;;;7584:21:27;7641:2;7621:18;;;7614:30;7680;7660:18;;;7653:58;7728:18;;9283:58:4;7574:178:27;9283:58:4;-1:-1:-1;;;;;9408:13:4;;;;;;:9;:13;;;;;:18;;9425:1;;9408:13;:18;;9425:1;;9408:18;:::i;:::-;;;;-1:-1:-1;;9436:16:4;;;;:7;:16;;;;;;:21;;-1:-1:-1;;;;;;9436:21:4;-1:-1:-1;;;;;9436:21:4;;;;;;;;9473:33;;9436:16;;;9473:33;;9436:16;;9473:33;9141:372;;:::o;9730:348::-;9789:13;9805:23;9820:7;9805:14;:23::i;:::-;9789:39;;9925:29;9942:1;9946:7;9925:8;:29::i;:::-;-1:-1:-1;;;;;9965:16:4;;;;;;:9;:16;;;;;:21;;9985:1;;9965:16;:21;;9985:1;;9965:21;:::i;:::-;;;;-1:-1:-1;;10003:16:4;;;;:7;:16;;;;;;9996:23;;-1:-1:-1;;;;;;9996:23:4;;;10035:36;10011:7;;10003:16;-1:-1:-1;;;;;10035:36:4;;;;;10003:16;;10035:36;9730:348;;:::o;2041:169:0:-;2096:16;2115:6;;-1:-1:-1;;;;;2131:17:0;;;-1:-1:-1;;;;;;2131:17:0;;;;;;2163:40;;2115:6;;;;;;;2163:40;;2096:16;2163:40;2041:169;;:::o;849:125:21:-;907:23;:10;922:7;907:14;:23::i;:::-;945:22;;-1:-1:-1;;;;;945:22:21;;;;;;;;849:125;:::o;6612:307:4:-;6763:28;6773:4;6779:2;6783:7;6763:9;:28::i;:::-;6809:48;6832:4;6838:2;6842:7;6851:5;6809:22;:48::i;:::-;6801:111;;;;-1:-1:-1;;;6801:111:4;;;;;;;:::i;275:703:11:-;331:13;548:10;544:51;;-1:-1:-1;574:10:11;;;;;;;;;;;;-1:-1:-1;;;574:10:11;;;;;;544:51;619:5;604:12;658:75;665:9;;658:75;;690:8;;;;:::i;:::-;;-1:-1:-1;712:10:11;;-1:-1:-1;720:2:11;712:10;;:::i;:::-;;;658:75;;;742:19;774:6;764:17;;;;;;-1:-1:-1;;;764:17:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;764:17:11;;742:39;;791:150;798:10;;791:150;;824:11;834:1;824:11;;:::i;:::-;;-1:-1:-1;892:10:11;900:2;892:5;:10;:::i;:::-;879:24;;:2;:24;:::i;:::-;866:39;;849:6;856;849:14;;;;;;-1:-1:-1;;;849:14:11;;;;;;;;;;;;:56;-1:-1:-1;;;;;849:56:11;;;;;;;;-1:-1:-1;919:11:11;928:2;919:11;;:::i;:::-;;;791:150;;548:180:22;627:18;631:4;637:7;627:3;:18::i;:::-;619:64;;;;-1:-1:-1;;;619:64:22;;10798:2:27;619:64:22;;;10780:21:27;10837:2;10817:18;;;10810:30;10876:34;10856:18;;;10849:62;-1:-1:-1;;;10927:18:27;;;10920:31;10968:19;;619:64:22;10770:223:27;619:64:22;-1:-1:-1;;;;;693:20:22;716:5;693:20;;;;;;;;;;;:28;;-1:-1:-1;;693:28:22;;;548:180::o;11797:778:4:-;11947:4;-1:-1:-1;;;;;11967:13:4;;1034:20:8;1080:8;11963:606:4;;12002:72;;-1:-1:-1;;;12002:72:4;;-1:-1:-1;;;;;12002:36:4;;;;;:72;;666:10:9;;12053:4:4;;12059:7;;12068:5;;12002:72;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12002:72:4;;;;;;;;-1:-1:-1;;12002:72:4;;;;;;;;;;;;:::i;:::-;;;11998:519;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12241:13:4;;12237:266;;12283:60;;-1:-1:-1;;;12283:60:4;;;;;;;:::i;12237:266::-;12455:6;12449:13;12440:6;12436:2;12432:15;12425:38;11998:519;-1:-1:-1;;;;;;12124:51:4;-1:-1:-1;;;12124:51:4;;-1:-1:-1;12117:58:4;;11963:606;-1:-1:-1;12554:4:4;11797:778;;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:631:27;;108:18;149:2;141:6;138:14;135:2;;;155:18;;:::i;:::-;230:2;224:9;198:2;284:15;;-1:-1:-1;;280:24:27;;;306:2;276:33;272:42;260:55;;;330:18;;;350:22;;;327:46;324:2;;;376:18;;:::i;:::-;416:10;412:2;405:22;445:6;436:15;;475:6;467;460:22;515:3;506:6;501:3;497:16;494:25;491:2;;;532:1;529;522:12;491:2;582:6;577:3;570:4;562:6;558:17;545:44;637:1;630:4;621:6;613;609:19;605:30;598:41;;;;88:557;;;;;:::o;650:173::-;718:20;;-1:-1:-1;;;;;767:31:27;;757:42;;747:2;;813:1;810;803:12;828:196;;940:2;928:9;919:7;915:23;911:32;908:2;;;961:6;953;946:22;908:2;989:29;1008:9;989:29;:::i;1029:270::-;;;1158:2;1146:9;1137:7;1133:23;1129:32;1126:2;;;1179:6;1171;1164:22;1126:2;1207:29;1226:9;1207:29;:::i;:::-;1197:39;;1255:38;1289:2;1278:9;1274:18;1255:38;:::i;:::-;1245:48;;1116:183;;;;;:::o;1304:338::-;;;;1450:2;1438:9;1429:7;1425:23;1421:32;1418:2;;;1471:6;1463;1456:22;1418:2;1499:29;1518:9;1499:29;:::i;:::-;1489:39;;1547:38;1581:2;1570:9;1566:18;1547:38;:::i;:::-;1537:48;;1632:2;1621:9;1617:18;1604:32;1594:42;;1408:234;;;;;:::o;1647:696::-;;;;;1819:3;1807:9;1798:7;1794:23;1790:33;1787:2;;;1841:6;1833;1826:22;1787:2;1869:29;1888:9;1869:29;:::i;:::-;1859:39;;1917:38;1951:2;1940:9;1936:18;1917:38;:::i;:::-;1907:48;;2002:2;1991:9;1987:18;1974:32;1964:42;;2057:2;2046:9;2042:18;2029:32;2084:18;2076:6;2073:30;2070:2;;;2121:6;2113;2106:22;2070:2;2149:22;;2202:4;2194:13;;2190:27;-1:-1:-1;2180:2:27;;2236:6;2228;2221:22;2180:2;2264:73;2329:7;2324:2;2311:16;2306:2;2302;2298:11;2264:73;:::i;:::-;2254:83;;;1777:566;;;;;;;:::o;2348:367::-;;;2474:2;2462:9;2453:7;2449:23;2445:32;2442:2;;;2495:6;2487;2480:22;2442:2;2523:29;2542:9;2523:29;:::i;:::-;2513:39;;2602:2;2591:9;2587:18;2574:32;2649:5;2642:13;2635:21;2628:5;2625:32;2615:2;;2676:6;2668;2661:22;2615:2;2704:5;2694:15;;;2432:283;;;;;:::o;2720:264::-;;;2849:2;2837:9;2828:7;2824:23;2820:32;2817:2;;;2870:6;2862;2855:22;2817:2;2898:29;2917:9;2898:29;:::i;:::-;2888:39;2974:2;2959:18;;;;2946:32;;-1:-1:-1;;;2807:177:27:o;2989:255::-;;3100:2;3088:9;3079:7;3075:23;3071:32;3068:2;;;3121:6;3113;3106:22;3068:2;3165:9;3152:23;3184:30;3208:5;3184:30;:::i;3249:259::-;;3371:2;3359:9;3350:7;3346:23;3342:32;3339:2;;;3392:6;3384;3377:22;3339:2;3429:9;3423:16;3448:30;3472:5;3448:30;:::i;3513:480::-;;3635:2;3623:9;3614:7;3610:23;3606:32;3603:2;;;3656:6;3648;3641:22;3603:2;3701:9;3688:23;3734:18;3726:6;3723:30;3720:2;;;3771:6;3763;3756:22;3720:2;3799:22;;3852:4;3844:13;;3840:27;-1:-1:-1;3830:2:27;;3886:6;3878;3871:22;3830:2;3914:73;3979:7;3974:2;3961:16;3956:2;3952;3948:11;3914:73;:::i;3998:190::-;;4110:2;4098:9;4089:7;4085:23;4081:32;4078:2;;;4131:6;4123;4116:22;4078:2;-1:-1:-1;4159:23:27;;4068:120;-1:-1:-1;4068:120:27:o;4193:257::-;;4272:5;4266:12;4299:6;4294:3;4287:19;4315:63;4371:6;4364:4;4359:3;4355:14;4348:4;4341:5;4337:16;4315:63;:::i;:::-;4432:2;4411:15;-1:-1:-1;;4407:29:27;4398:39;;;;4439:4;4394:50;;4242:208;-1:-1:-1;;4242:208:27:o;4455:637::-;;4773:6;4767:13;4789:53;4835:6;4830:3;4823:4;4815:6;4811:17;4789:53;:::i;:::-;4905:13;;4864:16;;;;4927:57;4905:13;4864:16;4961:4;4949:17;;4927:57;:::i;:::-;-1:-1:-1;;;5006:20:27;;5035:22;;;5084:1;5073:13;;4743:349;-1:-1:-1;;;;4743:349:27:o;5305:488::-;-1:-1:-1;;;;;5574:15:27;;;5556:34;;5626:15;;5621:2;5606:18;;5599:43;5673:2;5658:18;;5651:34;;;5721:3;5716:2;5701:18;;5694:31;;;5305:488;;5742:45;;5767:19;;5759:6;5742:45;:::i;:::-;5734:53;5508:285;-1:-1:-1;;;;;;5508:285:27:o;5990:219::-;;6139:2;6128:9;6121:21;6159:44;6199:2;6188:9;6184:18;6176:6;6159:44;:::i;6574:414::-;6776:2;6758:21;;;6815:2;6795:18;;;6788:30;6854:34;6849:2;6834:18;;6827:62;-1:-1:-1;;;6920:2:27;6905:18;;6898:48;6978:3;6963:19;;6748:240::o;11772:356::-;11974:2;11956:21;;;11993:18;;;11986:30;12052:34;12047:2;12032:18;;12025:62;12119:2;12104:18;;11946:182::o;13764:413::-;13966:2;13948:21;;;14005:2;13985:18;;;13978:30;14044:34;14039:2;14024:18;;14017:62;-1:-1:-1;;;14110:2:27;14095:18;;14088:47;14167:3;14152:19;;13938:239::o;14364:128::-;;14435:1;14431:6;14428:1;14425:13;14422:2;;;14441:18;;:::i;:::-;-1:-1:-1;14477:9:27;;14412:80::o;14497:120::-;;14563:1;14553:2;;14568:18;;:::i;:::-;-1:-1:-1;14602:9:27;;14543:74::o;14622:125::-;;14690:1;14687;14684:8;14681:2;;;14695:18;;:::i;:::-;-1:-1:-1;14732:9:27;;14671:76::o;14752:258::-;14824:1;14834:113;14848:6;14845:1;14842:13;14834:113;;;14924:11;;;14918:18;14905:11;;;14898:39;14870:2;14863:10;14834:113;;;14965:6;14962:1;14959:13;14956:2;;;-1:-1:-1;;15000:1:27;14982:16;;14975:27;14805:205::o;15015:380::-;15094:1;15090:12;;;;15137;;;15158:2;;15212:4;15204:6;15200:17;15190:27;;15158:2;15265;15257:6;15254:14;15234:18;15231:38;15228:2;;;15311:10;15306:3;15302:20;15299:1;15292:31;15346:4;15343:1;15336:15;15374:4;15371:1;15364:15;15228:2;;15070:325;;;:::o;15400:135::-;;-1:-1:-1;;15460:17:27;;15457:2;;;15480:18;;:::i;:::-;-1:-1:-1;15527:1:27;15516:13;;15447:88::o;15540:112::-;;15598:1;15588:2;;15603:18;;:::i;:::-;-1:-1:-1;15637:9:27;;15578:74::o;15657:127::-;15718:10;15713:3;15709:20;15706:1;15699:31;15749:4;15746:1;15739:15;15773:4;15770:1;15763:15;15789:127;15850:10;15845:3;15841:20;15838:1;15831:31;15881:4;15878:1;15871:15;15905:4;15902:1;15895:15;15921:127;15982:10;15977:3;15973:20;15970:1;15963:31;16013:4;16010:1;16003:15;16037:4;16034:1;16027:15;16053:131;-1:-1:-1;;;;;;16127:32:27;;16117:43;;16107:2;;16174:1;16171;16164:12"
    },
    "gasEstimates": {
      "creation": {
        "codeDepositCost": "1456600",
        "executionCost": "infinite",
        "totalCost": "infinite"
      },
      "external": {
        "NAME()": "infinite",
        "SYMBOL()": "infinite",
        "addOperator(address)": "24362",
        "approve(address,uint256)": "infinite",
        "balanceOf(address)": "1335",
        "baseURI()": "infinite",
        "burn(uint256)": "infinite",
        "getApproved(uint256)": "2182",
        "isApprovedForAll(address,address)": "infinite",
        "isOperator(address)": "infinite",
        "mint(address,uint256)": "infinite",
        "name()": "infinite",
        "owner()": "1076",
        "ownerOf(uint256)": "1323",
        "removeOperator(address)": "24331",
        "renounceOperator()": "23309",
        "renounceOwnership()": "23482",
        "safeTransferFrom(address,address,uint256)": "infinite",
        "safeTransferFrom(address,address,uint256,bytes)": "infinite",
        "setApprovalForAll(address,bool)": "23360",
        "setURI(string)": "infinite",
        "supportsInterface(bytes4)": "538",
        "symbol()": "infinite",
        "theBaseURI()": "infinite",
        "tokenURI(uint256)": "infinite",
        "transferFrom(address,address,uint256)": "infinite",
        "transferOwnership(address)": "23697"
      }
    },
    "methodIdentifiers": {
      "NAME()": "a3f4df7e",
      "SYMBOL()": "f76f8d78",
      "addOperator(address)": "9870d7fe",
      "approve(address,uint256)": "095ea7b3",
      "balanceOf(address)": "70a08231",
      "baseURI()": "6c0360eb",
      "burn(uint256)": "42966c68",
      "getApproved(uint256)": "081812fc",
      "isApprovedForAll(address,address)": "e985e9c5",
      "isOperator(address)": "6d70f7ae",
      "mint(address,uint256)": "40c10f19",
      "name()": "06fdde03",
      "owner()": "8da5cb5b",
      "ownerOf(uint256)": "6352211e",
      "removeOperator(address)": "ac8a584a",
      "renounceOperator()": "2ab6f8db",
      "renounceOwnership()": "715018a6",
      "safeTransferFrom(address,address,uint256)": "42842e0e",
      "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
      "setApprovalForAll(address,bool)": "a22cb465",
      "setURI(string)": "02fe5305",
      "supportsInterface(bytes4)": "01ffc9a7",
      "symbol()": "95d89b41",
      "theBaseURI()": "77eebbdb",
      "tokenURI(uint256)": "c87b56dd",
      "transferFrom(address,address,uint256)": "23b872dd",
      "transferOwnership(address)": "f2fde38b"
    }
  },
  "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_baseURI_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OperatorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OperatorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"NAME\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYMBOL\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"removeOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"newURI\",\"type\":\"string\"}],\"name\":\"setURI\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"theBaseURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BronzeCommunityNFT.sol\":\"BronzeCommunityNFT\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _setOwner(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _setOwner(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _setOwner(newOwner);\\n    }\\n\\n    function _setOwner(address newOwner) private {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/ERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\nimport \\\"./IERC721Receiver.sol\\\";\\nimport \\\"./extensions/IERC721Metadata.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\nimport \\\"../../utils/Strings.sol\\\";\\nimport \\\"../../utils/introspection/ERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of https://eips.ethereum.org/EIPS/eip-721[ERC721] Non-Fungible Token Standard, including\\n * the Metadata extension, but not including the Enumerable extension, which is available separately as\\n * {ERC721Enumerable}.\\n */\\ncontract ERC721 is Context, ERC165, IERC721, IERC721Metadata {\\n    using Address for address;\\n    using Strings for uint256;\\n\\n    // Token name\\n    string private _name;\\n\\n    // Token symbol\\n    string private _symbol;\\n\\n    // Mapping from token ID to owner address\\n    mapping(uint256 => address) private _owners;\\n\\n    // Mapping owner address to token count\\n    mapping(address => uint256) private _balances;\\n\\n    // Mapping from token ID to approved address\\n    mapping(uint256 => address) private _tokenApprovals;\\n\\n    // Mapping from owner to operator approvals\\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\\n\\n    /**\\n     * @dev Initializes the contract by setting a `name` and a `symbol` to the token collection.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override(ERC165, IERC165) returns (bool) {\\n        return\\n            interfaceId == type(IERC721).interfaceId ||\\n            interfaceId == type(IERC721Metadata).interfaceId ||\\n            super.supportsInterface(interfaceId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-balanceOf}.\\n     */\\n    function balanceOf(address owner) public view virtual override returns (uint256) {\\n        require(owner != address(0), \\\"ERC721: balance query for the zero address\\\");\\n        return _balances[owner];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-ownerOf}.\\n     */\\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\\n        address owner = _owners[tokenId];\\n        require(owner != address(0), \\\"ERC721: owner query for nonexistent token\\\");\\n        return owner;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-name}.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-symbol}.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev See {IERC721Metadata-tokenURI}.\\n     */\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory baseURI = _baseURI();\\n        return bytes(baseURI).length > 0 ? string(abi.encodePacked(baseURI, tokenId.toString())) : \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\\n     * by default, can be overriden in child contracts.\\n     */\\n    function _baseURI() internal view virtual returns (string memory) {\\n        return \\\"\\\";\\n    }\\n\\n    /**\\n     * @dev See {IERC721-approve}.\\n     */\\n    function approve(address to, uint256 tokenId) public virtual override {\\n        address owner = ERC721.ownerOf(tokenId);\\n        require(to != owner, \\\"ERC721: approval to current owner\\\");\\n\\n        require(\\n            _msgSender() == owner || isApprovedForAll(owner, _msgSender()),\\n            \\\"ERC721: approve caller is not owner nor approved for all\\\"\\n        );\\n\\n        _approve(to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-getApproved}.\\n     */\\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\\n        require(_exists(tokenId), \\\"ERC721: approved query for nonexistent token\\\");\\n\\n        return _tokenApprovals[tokenId];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-setApprovalForAll}.\\n     */\\n    function setApprovalForAll(address operator, bool approved) public virtual override {\\n        require(operator != _msgSender(), \\\"ERC721: approve to caller\\\");\\n\\n        _operatorApprovals[_msgSender()][operator] = approved;\\n        emit ApprovalForAll(_msgSender(), operator, approved);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-isApprovedForAll}.\\n     */\\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\\n        return _operatorApprovals[owner][operator];\\n    }\\n\\n    /**\\n     * @dev See {IERC721-transferFrom}.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        //solhint-disable-next-line max-line-length\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n\\n        _transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) public virtual override {\\n        safeTransferFrom(from, to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev See {IERC721-safeTransferFrom}.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) public virtual override {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _safeTransfer(from, to, tokenId, _data);\\n    }\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * `_data` is additional data, it has no specified format and it is sent in call to `to`.\\n     *\\n     * This internal function is equivalent to {safeTransferFrom}, and can be used to e.g.\\n     * implement alternative mechanisms to perform token transfer, such as signature-based.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _transfer(from, to, tokenId);\\n        require(_checkOnERC721Received(from, to, tokenId, _data), \\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n    }\\n\\n    /**\\n     * @dev Returns whether `tokenId` exists.\\n     *\\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\\n     *\\n     * Tokens start existing when they are minted (`_mint`),\\n     * and stop existing when they are burned (`_burn`).\\n     */\\n    function _exists(uint256 tokenId) internal view virtual returns (bool) {\\n        return _owners[tokenId] != address(0);\\n    }\\n\\n    /**\\n     * @dev Returns whether `spender` is allowed to manage `tokenId`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function _isApprovedOrOwner(address spender, uint256 tokenId) internal view virtual returns (bool) {\\n        require(_exists(tokenId), \\\"ERC721: operator query for nonexistent token\\\");\\n        address owner = ERC721.ownerOf(tokenId);\\n        return (spender == owner || getApproved(tokenId) == spender || isApprovedForAll(owner, spender));\\n    }\\n\\n    /**\\n     * @dev Safely mints `tokenId` and transfers it to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _safeMint(address to, uint256 tokenId) internal virtual {\\n        _safeMint(to, tokenId, \\\"\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-ERC721-_safeMint-address-uint256-}[`_safeMint`], with an additional `data` parameter which is\\n     * forwarded in {IERC721Receiver-onERC721Received} to contract recipients.\\n     */\\n    function _safeMint(\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) internal virtual {\\n        _mint(to, tokenId);\\n        require(\\n            _checkOnERC721Received(address(0), to, tokenId, _data),\\n            \\\"ERC721: transfer to non ERC721Receiver implementer\\\"\\n        );\\n    }\\n\\n    /**\\n     * @dev Mints `tokenId` and transfers it to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {_safeMint} whenever possible\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must not exist.\\n     * - `to` cannot be the zero address.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _mint(address to, uint256 tokenId) internal virtual {\\n        require(to != address(0), \\\"ERC721: mint to the zero address\\\");\\n        require(!_exists(tokenId), \\\"ERC721: token already minted\\\");\\n\\n        _beforeTokenTransfer(address(0), to, tokenId);\\n\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(address(0), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Destroys `tokenId`.\\n     * The approval is cleared when the token is burned.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _burn(uint256 tokenId) internal virtual {\\n        address owner = ERC721.ownerOf(tokenId);\\n\\n        _beforeTokenTransfer(owner, address(0), tokenId);\\n\\n        // Clear approvals\\n        _approve(address(0), tokenId);\\n\\n        _balances[owner] -= 1;\\n        delete _owners[tokenId];\\n\\n        emit Transfer(owner, address(0), tokenId);\\n    }\\n\\n    /**\\n     * @dev Transfers `tokenId` from `from` to `to`.\\n     *  As opposed to {transferFrom}, this imposes no restrictions on msg.sender.\\n     *\\n     * Requirements:\\n     *\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function _transfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {\\n        require(ERC721.ownerOf(tokenId) == from, \\\"ERC721: transfer of token that is not own\\\");\\n        require(to != address(0), \\\"ERC721: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(from, to, tokenId);\\n\\n        // Clear approvals from the previous owner\\n        _approve(address(0), tokenId);\\n\\n        _balances[from] -= 1;\\n        _balances[to] += 1;\\n        _owners[tokenId] = to;\\n\\n        emit Transfer(from, to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Approve `to` to operate on `tokenId`\\n     *\\n     * Emits a {Approval} event.\\n     */\\n    function _approve(address to, uint256 tokenId) internal virtual {\\n        _tokenApprovals[tokenId] = to;\\n        emit Approval(ERC721.ownerOf(tokenId), to, tokenId);\\n    }\\n\\n    /**\\n     * @dev Internal function to invoke {IERC721Receiver-onERC721Received} on a target address.\\n     * The call is not executed if the target address is not a contract.\\n     *\\n     * @param from address representing the previous owner of the given token ID\\n     * @param to target address that will receive the tokens\\n     * @param tokenId uint256 ID of the token to be transferred\\n     * @param _data bytes optional data to send along with the call\\n     * @return bool whether the call correctly returned the expected magic value\\n     */\\n    function _checkOnERC721Received(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes memory _data\\n    ) private returns (bool) {\\n        if (to.isContract()) {\\n            try IERC721Receiver(to).onERC721Received(_msgSender(), from, tokenId, _data) returns (bytes4 retval) {\\n                return retval == IERC721Receiver.onERC721Received.selector;\\n            } catch (bytes memory reason) {\\n                if (reason.length == 0) {\\n                    revert(\\\"ERC721: transfer to non ERC721Receiver implementer\\\");\\n                } else {\\n                    assembly {\\n                        revert(add(32, reason), mload(reason))\\n                    }\\n                }\\n            }\\n        } else {\\n            return true;\\n        }\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any token transfer. This includes minting\\n     * and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - When `from` and `to` are both non-zero, ``from``'s `tokenId` will be\\n     * transferred to `to`.\\n     * - When `from` is zero, `tokenId` will be minted for `to`.\\n     * - When `to` is zero, ``from``'s `tokenId` will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0x7d2b8ba4b256bfcac347991b75242f9bc37f499c5236af50cf09d0b35943dc0c\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../../utils/introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId\\n    ) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(\\n        address from,\\n        address to,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0xf101e8720213560fab41104d53b3cc7ba0456ef3a98455aa7f022391783144a0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @title ERC721 token receiver interface\\n * @dev Interface for any contract that wants to support safeTransfers\\n * from ERC721 asset contracts.\\n */\\ninterface IERC721Receiver {\\n    /**\\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\\n     * by `operator` from `from`, this function is called.\\n     *\\n     * It must return its Solidity selector to confirm the token transfer.\\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\\n     *\\n     * The selector can be obtained in Solidity with `IERC721.onERC721Received.selector`.\\n     */\\n    function onERC721Received(\\n        address operator,\\n        address from,\\n        uint256 tokenId,\\n        bytes calldata data\\n    ) external returns (bytes4);\\n}\\n\",\"keccak256\":\"0xd9517254724276e2e8de3769183c1f738f445f0095c26fd9b86d3c6687e887b9\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xd32fb7f530a914b1083d10a6bed3a586f2451952fec04fe542bcc670a82f7ba5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        assembly {\\n            size := extcodesize(account)\\n        }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        (bool success, ) = recipient.call{value: amount}(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain `call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value\\n    ) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(\\n        address target,\\n        bytes memory data,\\n        uint256 value,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(\\n        address target,\\n        bytes memory data,\\n        string memory errorMessage\\n    ) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Tool to verifies that a low level call was successful, and revert if it wasn't, either by bubbling the\\n     * revert reason using the provided one.\\n     *\\n     * _Available since v4.3._\\n     */\\n    function verifyCallResult(\\n        bool success,\\n        bytes memory returndata,\\n        string memory errorMessage\\n    ) internal pure returns (bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x3336baae5cf23e94274d75336e2d412193be508504aee185e61dc7d58cd05c8a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Strings.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev String operations.\\n */\\nlibrary Strings {\\n    bytes16 private constant _HEX_SYMBOLS = \\\"0123456789abcdef\\\";\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\\n     */\\n    function toString(uint256 value) internal pure returns (string memory) {\\n        // Inspired by OraclizeAPI's implementation - MIT licence\\n        // https://github.com/oraclize/ethereum-api/blob/b42146b063c7d6ee1358846c198246239e9360e8/oraclizeAPI_0.4.25.sol\\n\\n        if (value == 0) {\\n            return \\\"0\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 digits;\\n        while (temp != 0) {\\n            digits++;\\n            temp /= 10;\\n        }\\n        bytes memory buffer = new bytes(digits);\\n        while (value != 0) {\\n            digits -= 1;\\n            buffer[digits] = bytes1(uint8(48 + uint256(value % 10)));\\n            value /= 10;\\n        }\\n        return string(buffer);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\\n     */\\n    function toHexString(uint256 value) internal pure returns (string memory) {\\n        if (value == 0) {\\n            return \\\"0x00\\\";\\n        }\\n        uint256 temp = value;\\n        uint256 length = 0;\\n        while (temp != 0) {\\n            length++;\\n            temp >>= 8;\\n        }\\n        return toHexString(value, length);\\n    }\\n\\n    /**\\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\\n     */\\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\\n        bytes memory buffer = new bytes(2 * length + 2);\\n        buffer[0] = \\\"0\\\";\\n        buffer[1] = \\\"x\\\";\\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\\n            buffer[i] = _HEX_SYMBOLS[value & 0xf];\\n            value >>= 4;\\n        }\\n        require(value == 0, \\\"Strings: hex length insufficient\\\");\\n        return string(buffer);\\n    }\\n}\\n\",\"keccak256\":\"0x391d3ba97ab6856a16b225d6ee29617ad15ff00db70f3b4df1ab5ea33aa47c9d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC165.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC165} interface.\\n *\\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\\n * for the additional interface id that will be supported. For example:\\n *\\n * ```solidity\\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\\n * }\\n * ```\\n *\\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\\n */\\nabstract contract ERC165 is IERC165 {\\n    /**\\n     * @dev See {IERC165-supportsInterface}.\\n     */\\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\\n        return interfaceId == type(IERC165).interfaceId;\\n    }\\n}\\n\",\"keccak256\":\"0x5718c5df9bd67ac68a796961df938821bb5dc0cd4c6118d77e9145afb187409b\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xa28007762d9da9db878dd421960c8cb9a10471f47ab5c1b3309bfe48e9e79ff4\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n// CAUTION\\n// This version of SafeMath should only be used with Solidity 0.8 or later,\\n// because it relies on the compiler's built in overflow checks.\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations.\\n *\\n * NOTE: `SafeMath` is no longer needed starting with Solidity 0.8. The compiler\\n * now has built in overflow checking.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            uint256 c = a + b;\\n            if (c < a) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b > a) return (false, 0);\\n            return (true, a - b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n            // benefit is lost if 'b' is also tested.\\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n            if (a == 0) return (true, 0);\\n            uint256 c = a * b;\\n            if (c / a != b) return (false, 0);\\n            return (true, c);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a / b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        unchecked {\\n            if (b == 0) return (false, 0);\\n            return (true, a % b);\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a + b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a * b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b <= a, errorMessage);\\n            return a - b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a / b;\\n        }\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        unchecked {\\n            require(b > 0, errorMessage);\\n            return a % b;\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x8666f020bd8fc9dc14f07e2ebc52b5f236ab4cdde7c77679b08cb2f94730043b\",\"license\":\"MIT\"},\"contracts/BronzeCommunityNFT.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC721/ERC721.sol\\\";\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/Strings.sol\\\";\\nimport \\\"@openzeppelin/contracts/utils/math/SafeMath.sol\\\";\\nimport \\\"./Role/Operator.sol\\\";\\n\\ncontract BronzeCommunityNFT is Ownable, ERC721, Operator {\\n    \\n    using Strings for uint256;\\n\\n    string public theBaseURI;\\n    string public constant NAME = \\\"Totem Forest Community NFT\\\";\\n    string public constant SYMBOL = \\\"TcFONFT\\\";\\n\\n    constructor(string memory _baseURI_) \\n        ERC721(\\n            NAME,\\n            SYMBOL\\n        ) \\n    {\\n        theBaseURI = _baseURI_;\\n    }\\n\\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\\n        require(_exists(tokenId), \\\"ERC721Metadata: URI query for nonexistent token\\\");\\n\\n        string memory thisBaseURI = baseURI();\\n        return bytes(thisBaseURI).length > 0 ? string(abi.encodePacked(thisBaseURI, tokenId.toString(), \\\".json\\\")) : \\\"\\\";\\n    }\\n\\n    function baseURI() public view virtual returns (string memory) {\\n        return theBaseURI;\\n    }\\n\\n    function addOperator(address account) public onlyOwner {\\n        _addOperator(account);\\n    }\\n\\n    function removeOperator(address account) public onlyOwner {\\n        _removeOperator(account);\\n    }\\n\\n    function setURI(string memory newURI) public onlyOwner {\\n        theBaseURI = newURI;\\n    }\\n\\n    function mint(address account, uint256 id) public onlyOperator {\\n        _mint(account, id);\\n    }\\n\\n    function burn(uint256 tokenId) public {\\n        require(_isApprovedOrOwner(_msgSender(), tokenId), \\\"ERC721: transfer caller is not owner nor approved\\\");\\n        _burn(tokenId);\\n    }\\n}\",\"keccak256\":\"0xa890fb27ea7db687a911a9a4a18835e58f58fd2432ab79fca977b6883b3b27fe\",\"license\":\"MIT\"},\"contracts/Role/Operator.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity 0.8.3;\\n\\nimport \\\"@openzeppelin/contracts/utils/Context.sol\\\";\\n\\nimport \\\"./Roles.sol\\\";\\n\\ncontract Operator is Context {\\n    using Roles for Roles.Role;\\n\\n    event OperatorAdded(address indexed account);\\n    event OperatorRemoved(address indexed account);\\n\\n    Roles.Role private _operators;\\n\\n    constructor() {\\n        if (!isOperator(_msgSender())) {\\n            _addOperator(_msgSender());\\n        }\\n    }\\n\\n    modifier onlyOperator() {\\n        require(\\n            isOperator(_msgSender()),\\n            \\\"OperatorRole: caller does not have the Operator role\\\"\\n        );\\n        _;\\n    }\\n\\n    function isOperator(address account) public view returns (bool) {\\n        return _operators.has(account);\\n    }\\n\\n    function renounceOperator() public {\\n        _removeOperator(_msgSender());\\n    }\\n\\n    function _addOperator(address account) internal {\\n        _operators.add(account);\\n        emit OperatorAdded(account);\\n    }\\n\\n    function _removeOperator(address account) internal {\\n        _operators.remove(account);\\n        emit OperatorRemoved(account);\\n    }\\n}\\n\",\"keccak256\":\"0x1dd7af9c6e5a7af0f4a3313712db002723e7a167933cde6084225898e372dd42\",\"license\":\"UNLICENSED\"},\"contracts/Role/Roles.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\n\\npragma solidity 0.8.3;\\n\\n/**\\n * @title Roles\\n * @dev Library for managing addresses assigned to a Role.\\n */\\nlibrary Roles {\\n    struct Role {\\n        mapping(address => bool) bearer;\\n    }\\n\\n    /**\\n     * @dev Give an account access to this role.\\n     */\\n    function add(Role storage role, address account) internal {\\n        require(!has(role, account), \\\"Roles: account already has role\\\");\\n        role.bearer[account] = true;\\n    }\\n\\n    /**\\n     * @dev Remove an account's access to this role.\\n     */\\n    function remove(Role storage role, address account) internal {\\n        require(has(role, account), \\\"Roles: account does not have role\\\");\\n        role.bearer[account] = false;\\n    }\\n\\n    /**\\n     * @dev Check if an account has this role.\\n     * @return bool\\n     */\\n    function has(Role storage role, address account)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        require(account != address(0), \\\"Roles: account is the zero address\\\");\\n        return role.bearer[account];\\n    }\\n}\\n\",\"keccak256\":\"0xa311d042a2e04c2a8fca27083e735c25f447a4c24133e54970451e9e09520334\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 778,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 780,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_symbol",
        "offset": 0,
        "slot": "2",
        "type": "t_string_storage"
      },
      {
        "astId": 784,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_owners",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 788,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_balances",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 792,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_tokenApprovals",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_address)"
      },
      {
        "astId": 798,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_operatorApprovals",
        "offset": 0,
        "slot": "6",
        "type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
      },
      {
        "astId": 3520,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "_operators",
        "offset": 0,
        "slot": "7",
        "type": "t_struct(Role)3611_storage"
      },
      {
        "astId": 2692,
        "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
        "label": "theBaseURI",
        "offset": 0,
        "slot": "8",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_address,t_mapping(t_address,t_bool))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_bool)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_uint256,t_address)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => address)",
        "numberOfBytes": "32",
        "value": "t_address"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Role)3611_storage": {
        "encoding": "inplace",
        "label": "struct Roles.Role",
        "members": [
          {
            "astId": 3610,
            "contract": "contracts/BronzeCommunityNFT.sol:BronzeCommunityNFT",
            "label": "bearer",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_bool)"
          }
        ],
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}