{
  "name": "totemfi-nft",
  "version": "1.0.0",
  "description": "TotemFi NFT smart contracts",
  "directories": {
    "test": "test"
  },
  "dependencies": {
    "@chainlink/contracts": "^0.2.1",
    "@openzeppelin/contracts": "^4.3.2",
    "@openzeppelin/test-helpers": "^0.5.10",
    "@remix-project/remixd": "^0.5.0",
    "@uniswap/v2-periphery": "^1.1.0-beta.0",
    "config": "^3.3.6",
    "fast-csv": "^4.3.6",
    "ipfs-http-client": "^52.0.0",
    "jsonwebtoken": "^8.5.1",
    "mermaid": "^8.10.1"
  },
  "devDependencies": {
    "@nomiclabs/hardhat-ethers": "^2.0.2",
    "@nomiclabs/hardhat-etherscan": "^2.1.6",
    "@nomiclabs/hardhat-waffle": "^2.0.1",
    "@tenderly/hardhat-tenderly": "^1.0.12",
    "@typechain/ethers-v5": "^6.0.1",
    "@types/chai": "^4.2.15",
    "@types/config": "^0.0.39",
    "@types/mocha": "^8.2.1",
    "@types/node": "^14.14.31",
    "chai": "^4.3.0",
    "copyfiles": "^2.4.1",
    "ethereum-waffle": "^3.2.1",
    "ethers": "^5.4.4",
    "hardhat": "^2.6.4",
    "hardhat-deploy": "^0.9.1",
    "hardhat-gas-reporter": "^1.0.4",
    "hardhat-typechain": "^0.3.5",
    "jsonwebtoken": "^8.5.1",
    "mocha": "^8.3.0",
    "npm-run-all": "^4.1.5",
    "npm-scripts-info": "^0.3.9",
    "rimraf": "^3.0.2",
    "solidity-coverage": "^0.7.15",
    "truffle-plugin-verify": "^0.5.15",
    "ts-generator": "^0.1.1",
    "ts-node": "^9.1.1",
    "typechain": "^4.0.2",
    "typescript": "^4.2.2"
  },
  "scripts": {
    "build": "hardhat compile && tsc",
    "clean": "rimraf artifacts && rimraf cache && rimraf deployments/localhost && rimraf src/types/*",
    "copy-dts": "copyfiles -u 1 \"src/**/*.d.ts\" dist/src",
    "deploy": "run-s deploy:development",
    "deploy:testnet": "run-s deploy:rinkeby deploy:kovan deploy:goerli deploy:matic_testnet deploy:bsc_testnet",
    "deploy:development": "hardhat deploy --network localhost --export export/abi/ropsten.json",
    "deploy:ropsten": "hardhat deploy --network ropsten --export export/abi/ropsten.json",
    "deploy:rinkeby": "hardhat deploy --network rinkeby --export export/abi/rinkeby.json",
    "deploy:kovan": "hardhat deploy --network kovan --export export/abi/kovan.json",
    "deploy:goerli": "hardhat deploy --network goerli --export export/abi/goerli.json",
    "deploy:mainnet": "hardhat deploy --network mainnet --export export/abi/mainnet.json",
    "deploy:matic": "hardhat deploy --network matic --export export/abi/matic.json",
    "deploy:matic_testnet": "hardhat deploy --network matic_testnet --export export/abi/matic_testnet.json",
    "deploy:bsc": "hardhat deploy --network bsc --export export/abi/bsc.json",
    "deploy:bsc_testnet": "hardhat deploy --network bsc_testnet --export export/abi/bsc_testnet.json",
    "export": "hardhat export-artifacts export/artifacts",
    "info": "npm-scripts-info",
    "prepack": "run-s clean deploy:testnet",
    "prepare": "run-s build copy-dts export",
    "pretest": "run-s prepare",
    "test": "hardhat test",
    "start": "hardhat node",
    "sketch": "run-s sketch:staking sketch:token sketch:vesting",
    "sketch:staking": "sol2uml contracts/Staking/,contracts/Price,contracts/PancakeSwap,contracts/Distribution -a -p -s -o uml/staking.svg",
    "sketch:token": "sol2uml contracts/,contracts/Staking/ -a -p -s -o uml/token.svg -d 0 -i StakingPool.sol,StakingPoolFactory.sol",
    "sketch:vesting": "sol2uml contracts/TotemVesting/,contracts -a -p -s -o uml/vesting.svg -d 0 -i ILocker.sol,BasisPoints.sol"
  },
  "scripts-info": {
    "build": "Build contracts and typescript code",
    "copy-dts": "Copy TypeChain type definition files to typescript output dir",
    "clean": "Clean build artifacts, including contracts deployment information",
    "deploy": "Deploy contracts to local ganache. Requires ganache running on localhost:8545",
    "deploy:testnet": "Deploy contracts to all supported testnets. Requires two environment variables: PROJECT_ID and MNEMONIC.",
    "deploy:development": "Deploy contracts to local ganache. Requires ganache running on localhost:8545",
    "deploy:rinkeby": "Deploy contracts to rinkeby. Requires two environment variables: PROJECT_ID and MNEMONIC.",
    "deploy:kovan": "Deploy contracts to kovan. Requires two environment variables: PROJECT_ID and MNEMONIC.",
    "deploy:goerli": "Deploy contracts to goerli. Requires two environment variables: PROJECT_ID and MNEMONIC.",
    "deploy:mainnet": "Deploy contracts to mainnet.",
    "deploy:matic_testnet": "Deploy contracts to matic_testnet.",
    "deploy:bsc": "Deploy contracts to bsc.",
    "deploy:bsc_testnet": "Deploy contracts to bsc_testnet.",
    "export": "Export artifacts in a simpler format",
    "info": "Displays information about the scripts.",
    "test": "Run unit tests",
    "sketch": "Generated UML Diagrams for all contracts",
    "sketch:staking": "Generate UML Diagram for staking pool contracts",
    "sketch:token": "Generate UML for token contracts",
    "sketch:vesting": "Generate UML for vesting contracts"
  },
  "repository": {
    "type": "git",
    "url": "git+https://github.com/TotemFi/nft-minting-holders-collab.git"
  },
  "files": [
    "contracts",
    "deployments/*/*.json",
    "deployments/*/.chainid",
    "dist/src/types",
    "export"
  ],
  "main": "./dist/src/types/index.js",
  "types": "./dist/src/types/index.d.ts",
  "license": "Apache-2.0",
  "bugs": {
    "url": "https://github.com/TotemFi/nft-minting-holders-collab/issues"
  },
  "homepage": "https://totemfi.com/",
  "optionalDependencies": {
    "fsevents": "^2.3.2"
  }
}
